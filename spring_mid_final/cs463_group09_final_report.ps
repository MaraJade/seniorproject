%!PS-Adobe-2.0
%%Creator: dvips(k) 5.993 Copyright 2013 Radical Eye Software
%%Title: cs463_group09_final_report.dvi
%%CreationDate: Tue May 31 12:48:43 2016
%%Pages: 25
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: NimbusRomNo9L-Regu NimbusRomNo9L-Medi
%%+ NimbusRomNo9L-ReguItal
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -R -Poutline -t letter
%+ cs463_group09_final_report.dvi -o cs463_group09_final_report.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2016.05.31:1248
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 856 2013-12-09 10:34:40Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.21, 2013/11/28
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { 
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 801 2013-07-09 18:10:41Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.04, 2011/10/21
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 876 2014-01-28 15:03:13Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not aload!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def
 
@fedspecial end
%%BeginFont: NimbusRomNo9L-ReguItal
%!PS-AdobeFont-1.0: NimbusRomNo9L-ReguItal 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular Italic) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -15.5 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-ReguItal def
/PaintType 0 def
/WMode 0 def
/FontBBox {-169 -270 1010 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E134D4CB5ABCED39AC635
DA001E9934C198A7F9B9ED0028A85E9AE00421DFD8EAA3BB3B4B4CE45D209303
237BD51809FE4D880900B1EEB236ACA87B9FF6EBE6B994A60AF5D67CCC42BD56
77295C346EB4C62BDC1EF22EE07DAAD928DFB73455F091F32408ED6430B97417
683AF27A03718A156E3F6E7B6E4F2E8177503CD82DDBF4557A3CCFF4C858AE7A
F7EFED6CC521A28342436B953E4650B5792BE85EA2F989EB6D986905A61FA38B
96E1BBC830B74469150FB0B598A794FD80D10870084A877273A9502C3456E5EF
74350E6E3BE5863E8BA185EB59FB87B36566AF71200B6ED389D1287D4E925E33
B2383ED05D87D48586E698FBC5D562ED9D8A09EC3EAA1B1F300224AF20C23F26
A2EADC74562571DA84B3914D1D80B127C6FF4706C7046BBB372A0013E0AB94F0
C27946583871D272BF4F20FA84E89D745DE7BBA885CC09BA72E0F530ED4EF7D1
864B3C67007ED98800284235372F0A70C912E21E851AFBF812165B8DF912CD1A
013E271F0B347967876C68AE4C4107EF8AD1F170916210034C66394A9D971B68
FBFC1131E37FC178EB97C1B2A0F573ADD9D7C0BF944E6529734DF8A7EF54485B
A3375CC30E9E328943733CBD352BC15B06C85BFB4A96994291C72A0EAE84FB01
0F1B24D0125FB8C16D60561DF8BB7AA7DDFE9549AFB70C1E89424214609FDE41
9A142892E30F02754FD234CEB3C59A2A04C06BAB7AE40E8FDEC50559B8347684
391C750987802D5452C47C1E0B5F222DE9A0EEAFEE19D796FF375A1E1EF0AEED
1BCAC4F485FCAEE18AEC585D1A9D80F41871DDA45FEF1EAE82C5893118987BEB
4D9E345C27C7419FE65E4853B40537D822E34FF1E0BD2819D21EF607981259E8
9F1040A2D708D7463858AA5381759AC49DF4DDDEB209A278FE60BD2508ACA0F4
6A249A05B652E4C7BF1B676943CDC463B30BE5C2317E1F248E6BB90C96AF331F
1AE9E09BE98DA43549978DC40300C155FF23FE7E929A8F9CE53FA3362D872CDB
A530E9795CBEE9CF139BF9C9BE51D592FCDED2A7CF34ED030FE2D062F82755F5
0F709FE46B305D0E415AFD2F387D01E4F56E5EC1E658410088780E87FE47F1A5
099B5ACE61B6E0B11BD3213AE3A0FFC36F2CDC0B9208993B7603C32AAFE2188A
14C9BD02E00781EB11E645EE3D17F68522565B2C18337CA874058BB2EE434E4D
FC12D8BF41B15DEED74673E723941D7E36464EE10D1F8B6AA8EB218ED826EB4C
C0F8D784595B21458C652A5565D96CD38B900F1C10BB1554C29427A8A08B45CC
A30A2B675946BA724F69FEB1E8FD7DC1D74BDEA77930F422822BB15D1BFC89A8
50B758A3ED81F506337B1557E44C36771D1B98B283537FB7E6C9492C2FC9F5B3
B18C4FA5BFE8A5C21C4225D3BF187695B9223A7A68309E172EF68851B36623ED
66EC7FD40D20D573D3E49345B301795BDB2CABFCF6DEF2C5BEC067188EC4CCEA
66FF03751A4D72847C0C1036B2DD83C5BB5CC6161D7722B3ECAD7CAF360CD271
60927CFF10954D7ABDFD2A4E3D180A2E95551CCEDD11F7C39B765BB942E979AA
A1DE3496DAA9C5D467ECE84CF7A8C288F9B22E0AE6685047D8BE0490862633F8
0AA1938F0353103DB83CCF9143F3A1A0FBACF79771B4E47D07EA87335F94152A
9A489FB0D44C754711D99A68E296DD3E74E0DF56E079235A8B3F5027D8FE5FE8
73E98EEF621E059DF969C14E19E1CB4F724C4255353C360C86120B9AAD6ED12E
84BF467E3DD9BF067F4B899D0465B1947B4FEF575F9FD4EA6464FD76CA981971
FC1FCA1696C5E500BA68D9A5946F30D55B2DFF5F12B27D62435D4125F8650FEB
BFD6AEF4729420162B4094AE3D46A7A0632CB1FC6C0B9B8DD7D5577A3817FAA5
F63B7662AEE60C8814A5444B86A8B105A11F03BB172262FCDED20332D08A47FC
445793737BFCF9EE4DED1841F703375E81298CB839DFA36CF38D402EA54F13E1
BC55E4A886A429025540834D37616752C6A537066EA86054E2297F55DA19EF3C
4AF0792B732E0275463FE7D54694BBC79988F265D8CA0537ADB9AE6C0F17BCDB
C1E184A7D19165CC49E6FE2CEDAB759AFFBA148E10679AFF15716AAAE30C8852
BFFFFCA18D388545D1AB2CA54B8B45DE7EDC9E069DFF2954D25F90577FA20F10
C6B9533D73443CA226A51290FD66CC9641903812C6983B66EFC75C03CB6E622B
8AC60B8747814C283601A5CF1C41FAB7DD4784CD74B34B93D2581687C92D7BF0
0C6F8129E347C6489FD4FC798ADD6BD4156710F4B18312D7422FA8FD72CBB746
750A9D2B35D5695E1B8D43FB421979DCB016E5CA2765235EE3CDAB6C133AC3DB
55A9E502D237B04DF5EC040F351CED41DE1896E73AFC4DA03AD2AB9E1510242B
6360DEDA109CB859DBC6628D11CBD0A6EA1306BA16333533A8969838DD7BC76A
63CC49C1A4C6D43E0EDF7E7B58F1321F1CC4C3F36EB54DA4ED36DB8D8304E4B1
844907C11C9A58A94F08726A7FBE9DDAF3AC1E9C0736AA92D45186394E0A138B
A28B0C509D7BB71922BC94F4B8D646EB0D031D61F39C73245DBCE7FD0E66750B
68D8E5D468CE2F2A7FB69D4EC66F476CB72E77A2B40E85E44456CC24DE3EA696
4E274E89CEB8F840C6705889A0619C9D40CCCFD6AA8CD08A8FD6EEECE27D1B96
56EACCC40791BD033A9764B1F45E994671B87AA14861D205D257B25952FB9F92
5B148C92954C67F3EE4D176E0A4B84C9F47E5E871C6769061E582EAB8DE29408
577187AD5BFFCBC7EE740CD4D855A488DE2435E8E5567D483E1C52CB78A2F690
3808B9BB459F0DA464320B7DA9522E3C9E3EE88D6F365B3C31DF75579CD24CCB
5A7CE967062F19345B9C2B780D8BDC394D0A708366442076E3AFF67832F8939D
4D26E89E6BA8CDE849B5131E19307559490FD90168ABB74D693073230FB9529C
D1C0B8D6C77342FB443C2943522B55670C7D91373C519DC210F062AAF8178718
AF1AE75651ECC5925D6245BD1D24FFF2AF405473FA19632DC5317D101234D650
E706F0D93B879FB3C034864529C558D5A62CE824C5B376CC246981D059F09F0C
6FA3E14AA5887B950D6BB557E0A86C600C100BA70091006E9C1EB82129373ECE
4BDB4CFAD83827FA709B1C96D0D0CC0E341CA1E3E70A84199678C378AF74925C
135C7FE7FF95EC73C61AAC9640199736A68FB47E03B0AA79104E10420C3F67E4
91EA298A68097564AF2167A2E8357A7EE7E75B3B9BA6FD74F2A2086B7864D225
A57E59508CC2064BFFE7C27027236C04B7C52F252D5C9578091F53E88750944A
A1105951D105D654AE451E60C03FEB118AE510A5A4833C6878133CA082439811
F3515CC01B842228D954C8279B7C45C8E09192FD0DF79B13EB5D68B45BDF736A
27654BC2ED0943289B92D07E83CDF905D1B86652B78D0C503234C1949E48C9DA
6B47BDE77D3346DDEC907CE0F42652C9E04B417222A358C5144B201A4AC9BA3B
91F9ADCEAE1C2CF61DB67FF26EEE9F4F654E3E278F2BE298C51A939AB9F6CA4F
1D44FD80B0013B522152C14F19CBA472D5054EBF59F8F73CA1723A3880188458
D6D6931AFFDB7E29FB0EBC300605B9B8E5F686536D2C586421D462D8286E25A8
415B5BF9CC780D7FBF21C20D5E8BD8EDD3011931834EF65E5D900353EFC3A7D5
BA1EB1F51ADF85A2426C430FC42E6D4338EE58950C8EEED0E860537BE05E14AD
97AA7AA98DC6CB5052261D715735810768798E71C577BC8C1DEDC1B91AE582EF
F2AD2B9B2D6D097A7D57B95A15D3B8F74B1D3101578C35ADD0A8D9D4DCB0ECF3
4CC81038FDB1F0ED2F297115F853CC86DAC21DAE5F65768C9CB901EFE59DF68C
D921766A4CB153F674FB98BB757ACE99FBA6A695301F5613B47C29C955EBC3A3
C0A201089663D101BAC1D91114CC7163F93D1393E4909C07B0E83CB291334AFE
0FDEA9900E161624B681B881FAD9C47BA0C27A817C8E54AEDCE5826302220B18
D59EAB0034EE47AB5C5361E05E132D1CA61DA7601A57ED465309FBCD5D50D1D3
9DF32E7246B14299CE3AD792A90E38E15529C2C142CDDA4A9588B2A62F130242
384539C7F3A4DA5F18109E3D0632AB4BBAC12F69A6CA85673D77AA633B274105
FC3D879BF17C0080688BCBEAB16550104A5221DDC6D932969C29E080F75FD487
97E2714017CE7627C3070BEB2FEF69FEA777FA490F6CE7872B946787601CB52A
F40888A81D5EFE034E51A7698013FD62DEC0BE442799EA06B10CB379EBAAC49D
16493F13E714EF99830AB938BD9109633C4316198AE3456A4021923F9F676389
320F996E99C815E53F168DC564A9F80B8C7549D22F30A448F1A2A7AC415B6248
32BD33B267275629CAD1DD3B14B69236DD91D533F1948A36F07F2E642E6FEE5F
D39DCBF8FF3EBDA1080BD883DE8D9798D30A9EDE6936EA527F5BB05782DF5CBD
3F1D0E9D0D05DF4C44D23C067C14FA49180417FE9CE7E69DF74BB4C645F9E7F3
050BC3209DA6A872D17AFBBC17A93D71F3A3D321500914B573837BB8F83C812C
D5897F861FD3B2691B20EC38E6DEBBDE83E93E35F188E2255D4CA238D5070115
0F646B6444E7D392E0921577FB4E3FD0F61CCAE02BA2398BF2ACA283DCEC6652
101A12393A13991EBE5777AFDE920DB677A74AC48E341259FCDD1E8D932840FC
A37275F43F135787095ACA9E34C45BAED9D91FF93DA9079538796A58FD029922
164DC90A3564CDD2050E48DBF0CBE8BDD8A29A4913F440E3EBB41BC6D5E3D302
754B37C5E3B553E8D513719B4467FF2EBB5C74893583680A15BC64ED1C8DB6CA
FE569E7AA5B9A9AA4522C6846070A696CF93AD672573419D69A26FAA8DC50855
C2D5F0968809FA68015A4D417E9D1642B44EF2FABF10FFEA6E4890DFD710CBA6
32094EF4B97CC2228BE3ABFA98AE8217A094BAA29208FCC50A63E192C2E0D5AA
6CE7DB5F0586F30D293CDA6ECDA4A38571DC302BC48D5D779B05C441674107D6
11163FB8891ECA741AE654FBD351F966478C97F5D32291279D88C443C2F89671
38A65F45FA34328D15C874F900C6ECC79D637BE3D0D90BCE5FD94A219942A69A
C3D0C500922AEF593F09122636A8E7D21D2BB9D975D9CD13DD369AF4E9247490
0823B566DFD91A7F567B7814B47E09B7AE630D1E3FCC765A48FC325E5CA01FC8
5E5D016889C94B6D69CFF950270D4AA7A803E8EB604891E628AAD687B5997486
BD3F24179FAF457F56703B271F76306A47695A24CBFA32280E833B405B430DBE
CE62BE90B4EA70FCC872C473F43216FB6D46AD2EF7B7E5BAB302CAF2BFCC7E73
CB71896CBAF7BC191F3D2CBF347DF63E920966BC87520B513AD521A85A3A6B2F
E900215D3E0DB45A4223BB928B961DD71E2713A290520A677908E12B3DDC2381
A74D361E7885A9DCCF0114F662A42D15ECDE558F9235AF1513EEF2F1C3719525
20B1D1EDE4833B627E79876221E9DFE1E8229B2397D00BB653CF894A829FBDDD
A0902ED149CFF1997CDC6886A867E30919710517916D0CF980211650F7FD1D65
7C31646113A2B6D3E743D4CF1A918C5FD31D5D7DA47356A48D1673BBC1D48CBA
F6726A7305389AFD2124E2A718D0D606FD8A73CBD79B56F3B4AE2E245F69C0EB
BA3F0A944ECAEEC3620CB25C89895D6266D5B0A5599F12880F8E2689371960DE
1890660F3C03923041959FCBC9DC3293E19FBC28E6A169C42FBDD2F1144CF010
8742BD082C7FEDD1961DF51E0996EDE54CDD8A7B03BF8D5C6585CC4C3D373AB6
530B16F574AC8B12D71B809B00E645CB336A48445E64E46A52525B699B00CA23
E8F3167CF7D9AD5C07239C61DD3B0F021DB56072F0A343B792B8135EDE1A1BD8
01EFAB50C298E8BA83C7789C0A756014E808742D9D933E6B845F10471D7AA69F
E08B911642E06A289C01AB88876D9282F2E8CEA058028001EA39EC94E12391B6
C6666056E53621F7B451B551150310CBAB8B697F3E3B8E35767A23010E1E800A
60E4885C133665C3CB775626E8DB02FD495EAA448641620EB4D1619A0FA11AEA
74CCF036B34D53F8100D607B389BE611DCCFB2C08ADC3D0554557E03B2E3822D
FB23AC8D57D174FCDC7588767011B5F797FC81C91D8CE47FAD0A2445CA331AD4
B50439903FA002DA25223E12DFDE25FCD5ACC5CA80C77B12D8E44F4A33AE7EF4
DD668B98C33701D6CEC46A650DD724032E13384A7DA0239A33E94F5D7C88E82A
E7B5A63C0BD1B63A75B27D41F9AA345F7DF3B9E617EBBC1156133ABE453DC876
4DE49C2233AF5E2BACA1BEB60EB98D1E594B191945CBD5EFE3C36F3216B9BFEC
B6E8B9A6A74C5E3C26B9BB571D575DD6DB2BF911F09812F1FB493DF4A0CC0E5E
04D0A2B761704D5EB2E76E6F8B1F3AEF74AC6C3DEFAE7CD74C7C03634341123E
5CA48D17BC72ED2E95E26467CCF181287B99E2D2DC1EFB2790F316CCDFB4A363
C64AADBB2CACE246ABBF5F0F768ECBF1263A89D8B3847169C1C373E296CD45BD
8846942A022D1935DC968161BD215828DD1A87B85850B6C8465D97C22D46EEAA
F3CAE6AEAB9125F02D41035E7BA027F0BB72B9A58BB3F1BEF58537F5A9A90FF6
641C8F2CE0BFFF78494E1FA9C5ABD42FC371A3724BE9ACBA61C2191B3351E4B6
7D88A78015363FBA9480F8EBEB9CA2F5C6E7E26E49BE5FE61F3ACB465487439E
F62CE27FB22921C30F7670422D6927978BFD0B88366F92ADD983DD4A2B20CE25
814E3087647078EF07376D192E5C83368ACBA07AA201C7E71AB5FD202AF49F06
D33486429269E1A3542D19C3F5D4C8B4F17F8BBF18C3723024E238CFC02B4C6C
697C246D47F42E31881DD68411035F8F6ED0A696DA583B6EA5D3DACF6BABACE4
5B950A63C9330C7EC388CACB79074486B4214ED73430F73364122D959DFD322B
7098EE9A8ADB7CA49A7FDE606024526C5CF6378639015F2DA601EADFF5564187
C2CD4B49AE28CA24FADA235DB95F2C0BBFD28B57212C5B4046E3F6238284DFBE
3B42242D6EE09B73ED5BC99C80528E22AEA5041FAD6EC1578540A6CA42EAABBB
DC6421D462D8286E2150333DCFC56DD3662306521C628F4C0CBC42A637ACB99A
1399E4E643D1BCD52F450A808F83046C1CD5070B27D4919792C0CC6C6DED50EE
88CC1409043246C1714F5F4DD574C958300BF6FE53DFBFF555471943E3A859FA
8FF76595E757C0484FF13684DBFACE3474636715AD3CD38F1BFBE9261C02A685
79D2F360F149B62551A7BD6FC76D541D8C388E07A4B3B963C3E0FB216D55D8DB
84FB19A69E365A18DF7FC981026EA47CEE8FFB0EFA469E23050DFF71E1F2E030
10F72DDE3B6EBB808DBE5F2A0261756894722F0A1B4D56F2C397300E2F3B0911
504B583015DA344FDD98B7599FC904C8AA11F245912D2E2362E935F1D08E2794
1BE7385A0AF5F70A197BC6353DE5323EA4EB8F3033DD6B3DBF402AEB35E7BBB1
8441A822F28981268CF47422A7E4864D852F086EB07708D6DFADB3E2AEE71977
8AD1306247530AB5EC317437135C58CB6F783D2AD3A949D41A94C2816CF6F93B
66BE8F37761F11490786C04073D13A7668E6F917D1720380BF14DE59CC43FD6C
5C14B3BB6E1636B46B561CF6E6D7246FF8802B1516C384A91EBF87F75FD4FACE
99EB682DED9C350A472656C8CB4A1195C76A6AD7F6C78AA4D2D0CBBF76726AA2
B96C5921657E75FFF73662B78BD6B36605A05FB99890D4C6ADD26B7300CB6946
4D94FB0989B901F86ACCDCD3AC11F03AFBB605D50A33C2CC8C7C175F10829B9B
5B9B622938EF3E68BADBB9FD692214F0C7510ADACFCF82C04F2F313D1B620BC7
7DDCA2AE7A8EF436B25CCCE06AE138D95F4B6FD485AB4CDF25F2D925BE59D112
521EDAC3E74A97B847DCC9FD9BC61D5E4E4B2B3873253404ECDDAB8F052979BA
534AEBDC75B8D8989D3D1F1CE6C85EF416EDE4691F072DA5E8DCBEB3D7FAA44A
8E426CA44AA2AF44371CA8B9A4450DA76EDC0167B40152A6E00F18F0D23F8A75
F6D1464AF1A3E85626F9E7A692793929CC3D4194C179A1E00A995E5B894645DE
AF72910A6B8CAD8DF304C67DA879667678CE5F06145FA3E5880C85C892DC9012
07479C38D05B6EBFD2AE4D2F61806D02E6EF87648B4C0B94340E7ECFBDE02F61
DABFAD24907309E580444EACA1C772542C50E07CAA86EFA4A9FC98644ED09BF6
F3D646F50A8491A0CA8AACFA29D9F240B8532A9122B766EC8864844483F0E0C6
0175097641448C7891D7184FE365A938B6970AA96DF2806B1F0540B0624E52F2
1809FB375AEBCC602F0019CE74F0FAB1E9BD2D5BC19411F5C75BEA5B46D1934E
148831AE7C81D2A591DA8377800640E2298281B3C95CCE251C2960D66B3C2C2F
CE170211469F750401FD9DAEE064B1585F83F84438850E0F8F2980281F702B21
CDC45B85C1B1838B2F566B9A10C5CDF2EA68CAD32FB3675987A9D5EEBD4512E1
BB805A651459CF5C8F79899FE915831D3EC18288E285058BD045E93B04E215DA
3B452D11C4C6657B3261B241D1BE685BA6A834639D52AF7E4A987FFC5C60EFED
B7CC2B5A1E58BF6985CD29B355FB4D6F11DE938A70E51FDC8B8FEA69B044624C
725144D8941A967435BA594B85C1F204B6509D5201534954EAF50FBA122DE84A
5556B2B4E1B37DE4506ACC4224CFC00A8F833397A6E91FF295C9CD39D97DF78A
991A8AA43640ABAF6B758A5590615328AAB0231173D3D82A3D0635C98A57B5F8
DAB97B89AAB1E0E69C93A7B937085053C42ECF7716A5C212683829AD9700B320
5A433016971AF248EB25722ABFEB6BA7DEDD798652E630C7BC349B1C750B3E0D
D99C7FD9901D7508E17C81A5199A57BA3B720C1693D02E39ABDE94D205818CD5
AC4E30E92D029483909939354ABA63109612F8D958DCCD2755B5A9770C8139B3
3097E6C97636765BEF328E9065B57C331CDF3FFDBAFE3C2A458FC0117BAAB8C7
8E9ECFDDDE7F42128EAE3004F4689476B8A8CF82672026B3122E379A0012322A
325BEF16B1F95953FF9135460CA3496B85B4052A8E1D9AFE300853D100B95544
0F071138FC4DEFD4E596353E2A05960C9FB1AE5CCBDFB55FD65697FF0B85FD39
BDDF761709A6B62C4E2E571BA4E5446B31CE005A99D6079379614FF9EEDA5086
59D73B6DFCC6611D42171313569D5092E8F490945DACCA92EE90E18963A63645
3CE6EC74F1E1080E6494BF36A317DFD637B554707388C01B84BAC1F84525F04F
D91E2AFAE4BCD3C0BFB424421ED6047AF2FDA0D5387124656831862FF01CCB86
7F027E95F0C4804BFC6A22380B10AB2CAAA5C81CA7B836A376E0D29BAE28011D
003A4D5A6099CFD95353BEBA653AF5EAE9B1A6BA939DC3B2F7E23DF36325C38C
CA699BCEED8D80A7CD5C0C8224317BE91DD624D25C17C01C6EB24F8BD7616CCD
3BF841F63EEF3C0ED308217D4BFBC218DB74E506CFBFCDADF56B75CC3702E4B8
BE08ADCE756C19FD445E49C4CB1E4E53EDB93E563E5FD42AFA2E2E369A1A6DC3
B27ECC2018FD2B609EAD2728D71DBB14E6B0ADF796555F5D7A0EFD90C7CDF19E
831961AECF116BDA1E364FFBA48BB844B5623950E6053B0068BC64ED0163BE5E
4D11753CE4F2239662ACFCE740832014D11C3ABF43AF5EFE9FF1743C357A09FA
4DDD599A38B3E3957F3D7ED3C22DD5AADEA97C9E362CAA752F7B3EC507CBDAE1
AA0EE78B943B79CBA4AE311FF4612252D9EEC7DEAF5A6FE1C1EE5A64B3ED6EC5
86613C178C668558824D8B44937AEBF236B4D6F4854E03909A403F6731BA0483
600A94988A2FCCD91BFCEA5EC4DE842DE437C3F5FF3B8AEB8AB828EEC69F3D24
98503AF00EAF3AE0B8065557A0A3E4CF249C4D6BE413BB4D85E540A2DBD430F2
E1313F2539A8D5F5B248E0162152E10311F769908CB2C18150599A94C5E410F1
CD89DDDB2D5CA8BE744B66F2914710B8D874CF10A9960CA9559D44949A902345
2DF54E57ADD0E9D8DBB11D5CD83479FE9DFD0F75CE903BE3AB43F2B24763B076
ECB3C414A740F68E0ECB0AE684E56726F52FC5E3511325FFB4994EF384513DF2
EE647AE533258C8ECE04E2805B11F24A093CA44059FDFA4D029AA702D816C3B6
7993D501AA7A805801791FFCA8B89FD464B4981879C6981A037C32DC360AB78F
67EA51F0CA1B4C0FA63450BC2E8FF6DA40C59AE09ED2A2C91684455D7D070A89
0BCA144604C920F3329475463B3F0B9548853890A68FDA3DE2DFE57D2DA2F528
D0FA75451A5525BA016E0272A29E13C108C80882FD6082D9C895DFDA43434F4F
12FAB22DD81400184DB49E984AA17AEE3934EC57953C3B7868176C3331501B18
539677A79A0190B225712E2C1F43C117C7968E85B2952ADF4A75FA7046CAC075
7B22E84DB87B990225EB0035E7BA24B1E82915FD568ED8654E3726B3CF4EB9A0
55F353C9D465F7AB73DDAA341E50E5D4DCC71DF042BC9FDF07C268263D365355
047ECEE9EFD3F7B08774931BAB998D3EE2C0BA618BDBAFF75C1E5148CAF21FA4
B7AF6AECD655042BC26D9DCF7F3A34E6AAB4EABF46A7BAF2F6A99C342BF48F40
BE632FBEF76C63B733634483F340E286A8385274B1D1C8125FAE28DCBA8D2BBA
6EDCB8BFBE8D380ABE4CDDFC9E0D3DB633D04EC85C630DAA51CD1C34BF44A737
0B82B2FB022AC985067A86A852B761B2310673D3B0DCBC744B1B386CE5B95A15
B085B199CE6CA0D791A5A07D69F03812C27D542FCF0FDF2BBFEF4079F688B879
DA344FEBCA6D7D04FA64273512B086CC4E5838A54EFC270B5DB5ADA54B3C8D3B
B15B40810A2C5D8E765534CF53C6473F8F4747E64A18A5DD72541073F99EAD56
174B73056CAF0CE5F704599A9F326F3F8FE728D6E0186E9869335B0C7CCD4A69
26FD2C6807997F3A59DB56DE838F9D7E350B1DA5E95F4283342F16F120B8D872
84F0BAE3A251B77DC359A563B4BE5B7CE11334BC1834A1DB4CAF41EC7A96CCBE
74E7753B37EBAE4490AF57791BD9AB850721E40EBFBA28EE8994897CD63D8A97
5ABACD98576186FF6B33AEC08E9340B2AE238AA675DDFD67D7974ED9F36AD6F0
2008DD3761A6B00658A8486F8104496ED492143E37F05F1B75472F73102F34A3
14C841AF0AAEC0698D446AB369D4A2485070067BACF59A9BC53F35622A8A566D
7EEE8E538E869E15046F3B0452005D83A862DB21C87B55943A1B6E32BE9BEC0A
832BB9D273D68D19B9472C2306AC34A1963C8848D813B1672315E9D5D0C6DC06
3138217FD53B392AD25343A65E5F0D1CD06A70E7CAD0FE3B7F71F32F0647812C
82203DD2B4523FE1990199FF52D635629CCA82305B54A023B9E99CF1C48ECE65
C28B18AED401E56F8AEAD77A027AC2E7EA04EC90BFFD6067436299BE2BD5CFDB
B50A9D5C43ED6A0B9CE8347E598DACA23C36D7ED8833876D65563D019A463372
6944199442AD1DF0B7496595AC4977D1E332A2BCC069944C531980E0964AA36B
6D007BB44AFA7D7E77F1D60FCFB1B6D26A00C5E9BE9A87843774CF9608E7A281
E3E0159D7E89D32EC1130C4E43A76D12693ED29276D396747ACA6B72F7B27F32
FE44F1DB62FC2E59673DEF569B6856631EE3C5F8718CF31782AEE30A38B79CA4
6F7EB844E63A7FDD2738ECDCFA7A98AF808DD5B1B52ABE0EB3A9A05C40A16AEB
636AC23E1A091B3F1DDE4996C5E2AEB2A4A9A70BD21F68EB385544803677BE1D
64413763F8134D8E0C41D59AA0288FC450E8205A4E0CDA998C8424B88D1D2BDA
C65F6BA96E2815AE14C927EACF3850129844A8591D92446884D43F96EFA19B46
7256DD59B74BBEC84E5FE9DA213958BBBBA1BAF11B7AFC9B2BCA17A54EA9EBA6
7819D2DFBE79D14FC8E3ADFD37E87D6102E213E218294D10FBE76C8D25D59CC8
F7F3B4C861BCEC0619EA90BDD0224D01156666C7005ED5D54F9A32413F40FFBF
8778E5C98FD663D8C171D07E64C27C592F7601D4D34C687E286B40D93BC25C6D
B894885D7870CA02966C676A2A088547C9E2EA55B35CD9209C4010A640336B6F
98058A3C87A605FD3966D3819054F440F343CD866B2680078B52AC3E493BDE4C
AA73B6E3080CA0530CDEEE0C1A589817404A202EE1079958604D5764974EB2A8
05EC6390820E0B64099D4560E708BC9F495BC5503D5CE9485DC420A49FDE6D03
6DE2604581297A39E0616473D1DD73635F9D7B95321031F51A6EF3DF41755999
D0EBEE6890226880D917B07CFC205CBA3AA276493ADCDFA36AD240693BCD1408
DDF3BC8D9E480672C6A06917853D916CCCE1947DC0DAB32FD9A27F0180E0B576
2FE1D0288F982397DB1E918956C78B9487920DB12592AA94184BCCBCF0127F0F
93767EB9ACA0E5F9065306BCD3B314E933A29F379AD4F7649A1D5D4BD6519D66
7720C9BC316EBFD8062A3915AA5C0D22EE1026102277DC2718F8F5E4F8DDCB63
D98C9DDF428602B32E6EB0F0ECDF427E37E58D7C9F133AF15C2669D49396730F
16EC59F62E489B6A6A876BAC7A9333E8582C3121597316F65F52B062985D2DC7
1F3A3ABF54195FF84252027AC19A9C36473072A03F6A3444E6953CA9C96ED229
B27ABDE6E8D51B5258C1C59B76E349C35A8590FDA2C73C5BA3C22C558445EB01
3381C29ECB1E2960E64F363BBFB7FEA57FC0C9D2E39CE67DB21638984B6203FA
62A4D070793FB61B69AD29B2BABD05B4BF11F3751F70BA2474C1450A9AD471A2
7C6122BC187F5F8406A3250921E7B07C7093887C37A20E422F7749C641FBCCD4
651ECFDCBB3F16E3C0A8077E38C9A26640EADD63D35454A81A879A41C90FFD91
3127EDBF5E398D231C4805C2BF0D2B5386103C23FFAB10ECFB15B40092DC0DDC
42CA228348DF319E19A6E5D77294F6CCC31277A2AC433C81FED4A12C27B85C75
81EC3CD873C8C2CE774803CC61E5ECE2D47E91CA07F4740CFD75F6A53A356F51
E76172F214887ED7C41A18637C64639C4032C48B9A9A7276C249E31FA62C925B
856DD305E5CD523B86E196FBF7A925C1711A60A04DA73A385F9AF86E4852F81B
83AB7393C235A12C1C3D64CC91218734D17457A11F8430F7C7563E306B2EAC72
FD6BA01ADDF199F23C529339716920E883C080AA8FD3D6B77FF01AB57F9484BF
E9702A0225BC16AD489353071C700CF5B1F1EFDD423E75A07A612FB58D2A3260
D56C3CE0BEEA3971E86DF0528FDA8C3A8E8A5CE55DFD5EBC2FD151DA09AC3BA7
26CA28412A7D3C18873B36960A2BB54279ACA6C84FAEE983F13C65C8CE20DA43
BB559AA26E998BC239F96D24A20FA3F35D41EED9584B081779BF5B3F6BF79028
BB5D6F71C375417939B400950D404EF2027ECC52E212ED91B26B0017D16DD075
A0C779878D8BC61A9F8213E4945E6C002D2EF3A9A7E6869DC79F8B1ED601DB47
4AB7B55C087B76400BB8375E88FE1C480ACA053A1B232A1AFD7796D886262064
74EF22C22A30F9F147CA0E39819923977872D215E7417A3037F095F6D8FDCF29
C06AF438AA30B7AB53C23FEBD558795BE1196662EFB0737C58831C977C8DC6C8
52E64FC39DCC4CEB10AD0CF5625AFE958AE69A02F86E541907DDD389BFFB4B4B
3E1BF97237EA4CD9BBDC78F8CE09B4A3F3913BF5EA18A7FDA152DE2169E453D8
94655638C8CC3B8151BA431554D219D20E632BE9A9974D19C8F6DFC82843CC0C
43B3BF9AF87DAF9F3E82F43E60D336379C54AF3D52C052258EDADB03B08ECCC3
374F22E6BD4BC3EF4FBDBB1CEEDE9FD94D7D21459773C07DE6DD282D3B8248ED
9184BA9FC72990ECAA02564B953FF9A2809637444D659BE3B56C6769D37B7854
CAD9E3DAB34279C05D86BDB03B2327A3B5A5762952FCBDD6295A051F9F2A5B4D
8E7BF0DBFA186FAC57CBB205E6FAAC9750B1539C1D94E0FF030B29B853B98495
7D154E0AAA314E717F2447BCF59C23F5103985864DE088C0899D18B8877842D6
40E6B3EB7A27FB3CD5FF65C0FFF3565C66970760136432FB649DB94EC6BA697D
5EE2EE27B86BA7CE851452D743FFA53757ED24A9396967295368689839F69027
49906BCF3B4ABDD5E41147E56B766D4EB5E833AD276C510AC84DCAA670D5F1D2
109989085199CFCD4B3B7DA880C60C995A9248649236590A7FC084161344373A
5DEC5EF4ECEAC6BCBBE811F9B3B068A551395A2663A74C4B753EA812BE43A8A3
FB1A616DF267548D53A05636FA19E2C915619759BB53815B2B63B0C18905D6C6
06076D1A717D0A398BE27AE87A1879F88A23EC4B9E81C84A172206E10C4E0ECA
E5ABD6C88344F9450CA912B7EB8B0E3C0C07F8765BE5CB6ED58FC56B39EC7DD5
33AD0520419826F3909F5861B82D28ED2BB744AFB788A882AF5F30BD12ECE6E7
06A1999A95B5B8A42D48AE31B84F6BF55D106B18097E18300989FF371503B8D8
3B10258F99D041B006D22BDA92CF93FF37ED14B5EE27F779A1233DC0BFD4829A
5759907F35B41DDE471309C2043C8A551FAB90F736B378F59AC58660838B8768
7BB8AD4D4499A670C42B8CBB3FD1F9F714BB4D8A94CFE6F3414C77A0F9B1340F
EFD61890F26A79A5082B150F8A5FDA29E90418C8871E5447A3966C3329C5BFFE
DD4360F6DD85CEAF5D2E22
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusRomNo9L-Regu
%!PS-AdobeFont-1.0: NimbusRomNo9L-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -281 1000 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E152A40E590419249F2E4
C36159F8E54B532468E36965A38646781AB0B7F6A3E851FD10CAA49ADFC1E546
2FD2EC6150DC6E19523050F6148348A561AD8D2E2721EFF8A570CB33460A745B
926C889304C09753C2D78FB0CA95DC6DE5B8C524752C83601E7E9F73DF660674
F05AD83A166DA9BE89F22FEABD4B2665960F6FB5BC32928E1230C212E5D69CEE
0B3311A1738A11747AE263106916D8E95F25B25B4BC6AFB03B79ABB95DDA518B
41A49458111D2A1433C043627EF9460D324FFE22935F4F6DA88B8B91AE95B34E
08408A34EC8EAC3F65B6AE3E3E2524867EE9D29068F81E4372F4470BEEB4D6BE
EE4DF956BECC0CB77F8490117B22B2FB75C938ED0A5E208D88BC38B2AB8B9CFB
F1D53084B6F43DF336481ECA0AA2D5317BC83FC0E1D4DB01D0B7707EEF217E94
A7F985102DED27D8E8B009F7EF6DB91B91E78BFAE7BD688E10B3DC9AC77CDEE8
47AA4DC8EC78241E593D26EC7A60696151A2AE5325D736E99E01BDCBDE69579F
92EEEC224B6757EEDC64A75455BB665DF42A0E4CE7B99BF3E7D66F8FFC8C13F9
D7A1FF7A9D5FF7AC43396779F11C9B008C33A2043D48B61B88B03104B1425F09
675B559CA4302C001EE80D2B739CC0FD1023BF4F1FF9C01E892E59CCA7C26011
B8E0B6D29CC29FC72792FDA5E7D5D88EF98F9DBA960C96534C399C54865EAB86
0FA2E0D6C7C44B553EAC1574D55E7970744D4792FFFBDCE6FB4365BDBC2965BB
2E9EDAD9E0EBF0B620DB415AD98297F5AE83D9C710436657E74D26E83957C745
89834337035A7501803947F6880B70E56A3A404C62D57B849D28804CBE0F5884
435A0E12DCC9BA414ABB732BFBAE237001F557DEA5E972BA0838A3C7C9EB75AA
4A050DA0A529BDFFBF9011C360564FD17A02C18860AF6B86EFD4E2C125686C9A
5E114E95C71FC89A5DE9C589BFE5AC0480CFF716345265D2435EDAE67CFC4801
5BC08E7A48D683ACDB91E05F469C0C8919D73A5D07A1CCB173E30E76680ACB09
02A40A3E11916198BD69F1A26E88330F50692D0D5917E99E7A01B327413E24AA
E98EA484E45897E6AE4D6997B6E8BBF61C9406E916D56985CB2BD297E8ACFC6E
CF2D2281AD84696B7C6CB584BD85CC20BA14ADD3BC3E25DB91124C0ACF22E902
3CFBF04CC40DE331991E9075D22AB5EE0E849B340050E6C417C664A782D05549
DB2EF572F193B1C12B4635C2B358747046DE585E9EEC4FBBE9CE6AE8532B2CD4
101F1E68B19CC8756AD1987CCFF2302525BA8389489E8AD29C974C5A18DA8F05
5671EBB8954C3A90EE42B2AFCC9D2F52165A0DF06D6A365FB88544455AA87281
8C323EC616CEC04738328542CDE8B0B5BF7C93F1B7E133F3A0518EF8DE086451
334163D1D60B17DA2A733E28DB0DFF1CC06FCE2B0B6A6F13323FAE6EAAC2E140
289A9902475E6CE9C732FFD0344F1C8772BE74E0705D0904CE66DDE2A0FBDFFA
E7A5D02207DB3B8714CCD8900F91C87934A7E178004DDA6D91FC094A714F4A8B
27AB4787F38B78A41FDB756A5F2415403C8F7A99A825C8A6F37CE009152A0248
5C3A78D7E3649E597C9A8068828C2B964EB7976BDB0BA9541C3D806BFA4FB77C
5EBDD889F9D80B15A0764CB951D16524B621E0A4FA9D6F6F4C619646B14A25BB
40D57C2B958845B8788B60E408B6BD71BFC42CC17B0608329D093E1F9990481A
E419883FF01BB562BF7A8CD1C6CD40BBB35A568667C04C5536562FFF26C1CB5F
D8E91869E0A83A55638A573D81F89504703150AD673C8CF43B1D23ED27CD5E59
41D6326BFD00F8E2C46B4C975ACACB7A8A5A254A978CA100066CDE17ED245D82
EBD6D8A0E6E054359B579CD2E0064E5832E860F937F033783A442321927A1A8C
787CD363A398058AD4ED21814D5132E07D93C5A9B27F2B44615B72C93110F533
73C50E14657ED09FB27A350233112B0A339366B7373CE058456E0E1786B34190
AC06A6ED10305E09ADDC767335712B4542DA438A8FBC0A878608407B9211298D
B6C4B86449F9B3FA083CB2173152213DF47E7D07C329EF198E85BA6F03702324
345F9FAC6FA427A9DBF37C658288DD57DFF41A774A876ADAD1BD31E35F8B6C2E
FB81CA292E7C5BA6FB7CDDDA4209003976BE52A03A79C34EBF5CB4B9CEB57DEF
5C10691790826E35AB391A694D529730BAA8F75C5FDA4DBABD057D3F46466673
C2C816A836D1E36B99D07D17819B9F91B8D7347DA871E40063D57C1CAA5CFD90
04575AA9F1AB91191B962D64D82CD86F6AF3F1381F095C0379AF1AECE95D2547
CB2DD44ED0CFD23B1E1537ED3C83D34C8902ECE3FA1653EC33E4D50EE9329A8A
AF407145849ADD29773753BB577FEC7C1760D468320A79C6A1C23A69A87B4E59
3E92607A46259CE64EF5F3106A9747916C0BC2C46B83F574F370790FF793AC7D
7C48D9037EF31940A9C87DC01D4A88DE2D7515B5B6390EFA31A44589BE79A66E
6C292CFDE3ED8833DB255B8FF933A3F8EDEACADDE0FDB24B9AF2504EEFF2FBAA
DB48EF0D4FBBD2A0B5F8D89AAB7B971CC89C5334AD9996D31DF10C07AD641F24
AB4E8D98CA9421505EA0116A0876149EE60107620A89C9A3C8D1BEE4113428DE
0D55B98FA88D7CC258386B3D492717B438C0C74ACBC372F470DF8F35D6E5763B
312979604965F45E22266F569977FA7D7C2E62D9318B033223A9BC848420D62E
3111B09675FE9EC168A340DFDEDBADC1EA404EFAAF8B6194BBAFA142922EB643
DDEDEEF71A8C3865120E0C94D45E979D8392C29DD551188112A6AE98DB8CC966
2BEA42B9B6B8BD5ACAA54BD90BBD4607A2EFE01AF44913B89B791C0705FBF788
CC8A140549F78FC39DDD5FDD4700A56CE71FAACA472DD4C414087CAC63717C03
A3BD2215FE1427DE6E2BD8CF609735E847BAA0635F39A4BBC987172D1787E014
981A78A952644F5EBCC01A305C08EA4625C11416445E836DA7A3DE9A5C9CDE1B
9D487602DA79C4E845D5BE3CA6FDC088B462575052983010A2EC593B475F94A0
EC13432AD104E1E588A434ED028A2F301EC9B98B537DA47285A073A818373257
7DE94ADB70CEB5E6713AB137AD851808FA65D21C48BD9202CE0D5356AF6C40EA
820653A500302F0411B5ABF7644D03E17F39733E90B60F0DB14DC64C38FB8A97
C0BD6AB5AE1B5FAF5BEFB6A168497DD3E1C0933826D1472CCA9CAC4FA61042BF
B953C5AA0EA645772F1E38F523455AD0219F22C6E5E6975D49BABDB8EC50A3D0
6D3366B8A9C7D5BBCD5ACBD7B86D7E1BC311C99F108D54FCBE543CF02200BB9E
6F1B1B21FF80E30DCEA5F40F504468056D96AE7E0191A21742CFA51BC826BE28
4AD55D76AAB3B0B477436A6CE794BFF0ED77A7847F7CF4256ED2C90961ABCB4F
B89BE2D0D207C80CFC47E1922206029590608C6420183612DA9CC6598BAAC380
D6BB40A876D2BB649A5C2137F736756DED63CDAF5D281C0B5F2BE9E890D51816
AC91DE8D6D8F93A35D8AA2145E0598557707267CB6E58F6D9CA6F5B88EF3EE14
0C0F8E398980C7C6DCED448D1588FD8922A47AD1FA0D16BC17BE4D1495247B1E
C6579E3121725DEB36EC7B4A482E97B68B3C6F7239B54D7AD1F0AAB6C7A4A269
4669C901D7E46F00277891B9231F2831C19E73CF8E1EF3F81C1626E392D4B1DE
9A318360B9CB06F8F917B354F1D0ED0616289C27C1517263C2C8A901335B7753
AB510E74E9A2E37BCFACBA21221DA50567A45EF2E120FE3A811ECA081A3D0478
D3420B503563CCED8163121C1F672C14EE66ECFF5B219E8BE1598540175EAA76
406A0BB4DD3905C314C9262D553D7CB133CACA87F1535FEE6EEBC67F90818206
B95ADD734EB952C3415855EAFBEF4701909913270E0060FE23E1DA9A96CC481C
F1E7447E0D7936A4FFEE97317843F64743D9961F5F0B5A7C984B6BB390F2D2B7
A4A7376D231490C6836957FDA9D7799E5ADB6844A46FE598D19AC35D7FA92073
5CE37D8AC7115190CBAFE8841364D8DCD31B3D5122C8661BE65734E463102B69
B470A6190039BD94F2EE7972D0B24694AE042C8C9046F1ADBC7E9F64BA5B13B2
D3DC8707A8D556B16A79371932FE7BB7FF36389A0D65C454BAF07720ADCDBEBE
DE2B2275FB0BFD30DF0755C050400A2697EA21C97B9DAC9C231977BE978EEE0B
7A3704245DDBD08FCC0DED7F3E886E0206CB52BA639FC293CBDF7584CA269DEE
1C97A0F984F440B9BB7815A53B725661B27F5EB9C425CC1D2FD1DC099F780350
93ECCD7AE138C5AE0FB4F043144C9903478B4BB53E4EA9CE571B9871E0986884
51E3C31189183A62A2EC5CC2E6A672FE540904D7FFF20A101683BBFB391A8FF4
70C147C6813785426E50436F7CBED5E49046AF839C10ACC0ED47355D0FAAB8D2
509FD9478CC52C35F034F126393B7E62A21938D2166FDF363FBE20932DE23964
3456C3A198505449439794DAACFC09D88CFBA928D5D432170FBCB19B4C29CE1A
3D849EE85A0DA71350E6329ECFF1C904A94473322298534D5CDC3EE499B35288
A3D966999F260EBB2C2B7FAB368FF1A3266389B0907B8562DD08AA56021CBDF3
DE1C1F8645DA03EA729468D2EAE72FB04C6D2B4416E3E215FAD05624386895A9
7EA28B1791D94239667DB145DF8595130A44E89C39D2DFC5D3BCD8274E2503A2
D9FB123767F732E7BC40839603AF3DE5A65A1FFB5B46F4DD795C6AF904EF2DB9
9A4D2FF56D5D797C5209469456CDA0E8BFF82F12FE318DB9E65DC2F3E2A632CE
F071032FF667B3A1F62328B34FAED0F5B9722DB2D6F514E8C4C4BF3333DC0A7D
33341F627AA355682C977185591ED2237DF1592D73E3B8C51099724F9157C136
735CDB7DFD57D62B513FC5B63D113F7F0D00B0C41F93C548AFC465F5E37BB0BE
7571DF990F78D69354F116E92586DF8E30B2976991A3B77251DC0F15B0A7E82B
523AD187A3AE44D93FB7A0D5F3674C2359AD152CAC44BEFD881CFA38F31499DB
2BBE8FCC2556BFAD8971BAD3E036F15442EBD1557B0BBD97F0024189BD08ED10
558604C17FBE7FCF01EF9FF989CCA3DD4237244CFDACF1D190103A64E569EAB1
1EF3D3C7E4EE38308D20B6D91423D4F417B38E66572D9109520A371D9C501408
F9B9D1A30E09A7EB286EF0378A1D9E27F29C68624E863B28B2E7B4C3C38BF32C
CDDCD4CA025070AA646DAE4B889B575E8F4FFDC234D726EEDC3E7131A3049A89
BAAC98C00DE2278E989D877D2C7F808C2D7974C2E43250664A4D429A915D9F14
DC9577AD31EA98A51A1DB9CB0EC09492777B3810FCF8471354D04CDC1F08BDA8
FB63097109E771AB92E0198C9495D378DDF5E3879446BFA1B4F06E2C329AE0BA
4601D3607DB7466631822AF1BAEFB301E6900AC2B65CBC26BD9497A3B908EBE9
A2B47EEEE8018439FD1AEEE194EC060ED2476275D5384C43C08BF69E4CA44F7E
2A7780F6C88E1BE994C9B91DF4FA10FFB4FF1570574EAC8975B14588128A4F2F
6DC7A1758B036F6C2E48AC5C1E930346F7CCDD0AEF1705407B94B24819D3B17E
F3799178AA4E926A15A00063146618C8D2F36115E1867B79B61186AA832CA1BE
709523407F265666D7579BB8933FBF8C116E6294B75F3E3F9C620B59788EB9B9
FC1432C6903DE4B39EC952DF960918D17891CF1B76A76C2C64A87D5D014E189B
B9EB0D1DFF54A93A8DC14BE07A433D04CFD43A54A673FD23ED95145803260D08
7647FF55993A6C45E87431AC3549F382409883B823CE9FF4464500697CEC5C83
1BF140BB33970339EA0DB212ED3410AB183C2EDAF173F0DC106177F0F23A123E
4C539DF69555C9B7126C35A129D8B88307327F79156D6C685EB8A77528DF8313
1F02C5028D0F35B01F0810749D7DD98100BED879F02A81987A68453D1452EFEE
1B97A023938F8BC45C2E6ECEA957F5A825925463C653802571B320DF9DFE3589
993997CE0F1D799465DBFE4009BE6FE861BD920A19FEA255531A6A62C379993B
DB9178BAE43920E3AD73ED8D6A74D2789379B0297207C811514599AA82119E8E
EFA304677858F156E9EAC6EC03872BFA8D9CB1975BB9026B56FC3F24FE6E6EC3
01C670028FEF178AE85EEF9167CBA7AE6E3F2757EC5A6B046DCE9DB8F8CB66CC
775773A60B53D4B46DC4CE9B9FF1A7480F80EC4A1788BFF001DE4C2236D33C44
7ED04ACA9DBA348076F8E2E61CF29780690190D2E829323F3BA9F7ED7D399CE7
35A6A51764CF5E131CE693731B0C499FCB8CD67A6E7F7A04BC64ED1C8DB6CAFE
561E8A2FC628B5FB42044DEF0D0FCA179322EC30767616DAFAC22A2B3DDB4912
607C200780375606E7B763D701554DB8626A77E47739C769CBBFC9865A54F234
66508FEDA251C87F1111C25F2F8EB6DAE7A19255CD29401777494930135A961F
58F8714232A115392384B5A41CA2A7CE42BBBE661B4B40F59E4D372461555B0F
22DB7DAB1895D9C7E6D3297326D6AB654464E3E70ACA1D593C2CBB0CF1386B59
B3EA31C285E803A4466B47E2F3918C4365A348A02DA99C006C44777716388AA9
87B2665C366918880C3DA0E469D3509EF0118A4E98E17F6D7F9217151E8415E6
2819174A53C38A25519EB9A98EBBA5BD31877A487B252B5C832E109DBB9FDE2D
D6A4C645923DC29F384171A48660EA36DCB2D93694EB75EEC0AFF68345B17B82
9686C23D1E397FCDC2BD63B0A24FF7C52E96937FEABC99DD65CF6852F09F53B0
87A3E5283AB296939AF66086E18860B42C4645616799872263B1C363FB283C38
F0AA2A2004B7567780B795D46FB19165E0119C4359B471668282B84A6E6BCBF2
83C414E8AD6781F12B0F797290F0F4E5C03F4C05E63F7C7FE280E34E28E46B44
89C40D4C896445B96E7BED0BB864DA6469A9F85E1E59A84A6DF6B2EB858CA450
0976BBD5D5EAA001677BD081DF18650EF53A232A8C5013F4D50967B5140E02F9
E0CEFFCB4367B05CCBE5D82778636F411B2B72CF35172587C13265E7A78843F8
0CD719C44633862B102690C1545ED87773C6B3A8ABC8ABB13ECC3B249F1878A8
FBB90B6401B507B92E99DFF7DB2A6AFC77F1D7F6CF658032F8672E0E0600DEB3
8A0C2618A58148687C5C9DD69AE2932074325629DBE7BF3642EC9C7BBDFFC7AA
A6EC16C797B31B0006D964EE87B70841BBB0011D86ADCF5D118DE26D1A1F383A
2E3003317B192D35E8984EACCEE49E15DCFC537A774E8F036EA3BD1FB35B49AA
A6F5A4F21347549C1150C47407D2FBA6F34AFEEE271FE7E2B6FD928FF7E51CBB
67E70B290AC88D73F9CEF3648B20C687D77FF83C5898C718A1E73AA063486F3F
CD61CF880F6B9A1B6B68F3CCF0B1836A57B850BB9A806FB807693E837663D92A
3DF30AF50B62E4ECED90147C5AB8EBC973CD8D3946E50D5357E57CD8FF42D742
F39A7AA01C8B3074060D1A0C716B559A93FA16FFFF44DE8B99D6205FECE23D72
A9F61619E09C929FDAE02B4CF803672EF0AC1A4F76C8B2A035BFA7760362413D
7C9BCC3D58D6FB6BD665CA0D2C509270C53B5EA63F6D10265DC205CD8FFD81E9
0B3540C81049C819D1050A62F195A3051CAFF0C8404B65167DFE633C28A2F142
B856E17A6EC6EE510C1F0AB90A2297A6FA436B5116D10C6BCEFEE8139030E52C
13DD6B11A36BD9E98190CCA9EEFD8E5446EADB4DBF704DD1B3E7306BE84705CB
003C7EBA17035392BF285968C0DB6DDCC48590B40E808537744BDC081F40E027
E9A5005DF162A28E497C231A0B0AACA7779C204DFED7A30C3CEE434832D290AA
AFB6CA80087E8426C618F35939407E71E8A81EDC28658BCAC46B290DFC519741
D3858AE267B7F82277403C5DCEFC2A5038C96B8A9FBFDF25D6779971EC4E026D
010AEE32EB6A06C29075FF2BE551E14CCB2C3DED39E4BB878CF4D26D572D5973
33903328DEFCBFC939D820A970BB481EB62B5A8444D44E87D275D7FAFB371C31
D79FE5B5ED27C47B7BC864D52276BB967CF618433020670592121CF4DF75E6E7
F636E36678B8EB2B2CC99B33FC7A8B194070BA732D56CE2E449918CFA0BD6F36
15B632568E0EA67288F7AF12B053A535DF12D2DFA60982CBC90F930688C94329
B65E14F0617A0877BCCCE963F89BA1451FB3CA19D27633943967D45F730CFE0C
2768667D461CA559EEC7A15DC14530341A1CAF938F8592C6DFD756C0D6DDA4B6
82C5ACBF9965D25203E5BEA71FF2B972E2D21177409B07626EE46B039C4EDE4B
3BAE81FE47D86AD37AE081C6C5FFD28AB6F49B1FDBEC0F569031CDC00A227099
1367C2B10DE344349E457FFA665A46AD11556A9F47AD5CAE8B56AAB796E5C554
F4EA2AE2FF56014216ABBC37A0AD2B5A7187A04AAF44FDF04B0CFB2F24C24ECC
B0E3A458B6A64C4E94251295465B2D3A111E4AE90D46F1A6FE3EAEDC5E222FFA
572AD30B951B641FA734C987AA6C783F03CFD0BD479303CF3CAB8A7CA381AB5A
0384449C60F3766E1D58388B137C7C2A920797DD4157CD823FA597447627009A
E64A758320AC65513B3D4B0F757008B6FB506B0231114A3E5673BC1C22A00A03
EEAF96BFD849C4EDB9EA18273257E27877CA428C7C71FCE5AAF915AB48BE911F
483064B47FCD855A8966B52C3A19A15CB67C3D3C14C0F06528F9391CB4A43666
D0E8A4C13B56002A2DD5A5FE0134C4BB9A4D361FCB02C3BF7AA116B5539455B4
D778F3CF4A6AB36D20EF6457685570194FFF3E82C7FBDB6F4DD8BC56EF152CEF
5EB66D79C82CEBC1108C19CDE0D7F03EAF49BE166BA3DB1BF765EF0305CF3243
403EC4C62D25B1ED563C248ECE78A971F4AC9975138B38579FE7E7B9A29DF26B
7CCBDC5680292E5A05F03A121970E8F1633C58C6C2778DB1347BC022D0E2FA10
D86AB5C6B4B481ADE2A8040297C80939840A16E3A746BF5FE620C9DB575D318F
025FC523B81E16B50581C1E023B5E02F4BDAE14C5B2C6B6ADAB369C4ADA9783B
28C54C4E177CEFE4C58D836493698C04C678D81AF9A46AD130B06112C4CC70E3
B233AF175A96EB0567959BB1E236626AAEBB939F70CB09CA40A21CE46D1EE38D
60996CDC72A0FBC24A7050ED3E7841D6F2A77C4632EAAFA8525DA026DC1EA8EF
D2C30BB9D744B202965DC3D620232885045EFCA1034DAF2DB898D8A086290E45
115C8DE9877BD43699D908CC3F1B8384E661A40036AF14D1CB2B4066039D0F87
5F6F3C8137FD175C468DBB7DD83111643F79DDBDB350A2A18E0FD974135FB2AB
53B5B4648FDE13AC7920214B34B58A549D32519C5D9178BEF49F6185CED1820B
C8C8BAD838907339BF36DBDB4FC0910DE4D3C078FC13D552DD8708B0DBDDB463
75F63FCF1F58F13400D2BFB8296CAC6F1B2A465EC90AA64C6BD5C4A03C09921D
3F83DAD86DAD66D3EC9333D1DE46382E841BBF95A07528C8343292E178983EAD
8652B985D89C0E713F556814E051C6CEFE7E83C2F379B88C0A1693BB33D44602
2A4F9B9A418954A645AA0F6D4DA8F880E5C6524D974981091CF787CE9CE51D48
4F7E4976C4BA1C110F70D776BB12E71B9D621511E0FDB61D6BE0D43D699D9DD7
408F16BA69DD6FEAAD3CB6807D13251534DE1386509692C2E2161370940BA53D
FA02A07351BCD8C95F89E653EA5D589F257F3B177FCD274F8F6B6D7AD5E16EC1
039ED26273E79E39FF03C8DA1A4DF6C8B7B0EA9E611C05709D9CCE9EE283F4DF
B79975EAD0E341B382DE4540CE5E663A6F3DE864CFD51444738A0D95D1808AE4
ACAAC618F3F16299CA96CDD55426B07E0D6E591ABD90B651E24464F80309EA07
DD04E74AC5D873DD414B29138A74919652BDD053FFE1204E7588D287FEE615C0
61EB1B3984BAE5B41853C84DAB15C962534AC5130E87700E6D1522A7972805C6
C1CD07055847BE61B9B904F2F2DB5537B2139A0D8791BB855BBF53783482EB6F
8264278EE8DEEC7FC662CE4F3167F38C3D106535534A9ACD6582F3273B6FCE97
86BCC3586CA953EF480D4620739410A5F61035B90981181192DC54032651E305
8576517BAE6EAB9429FD359809D95A11B3A26B88CE0DF9B0779B4235F7B5C9D2
A113A8B6A59568307D70C25A090D4AEC9A71563EDA990CE3481E7E574106E677
1F4A5F8ADA324165EFB0EF200E16BA13E4A36F92147E38CD271718777AE53034
5C43C74E88A8A1E527B0E77BAE62868382DA75973AEBB7236B120EF5502844E7
50853317185E95A7C250D459945ACDCC8DA70D5339C919D9954FE91E079DCFEA
12E1BE6D51D46599D8C2DDFE94A2105FC2D898DF5FA1E5A94867E63CC03ED3A5
C17C70BBC9515DBB6667A7B772523155BB827311033820B0380F65B3AA4F3E83
7B5A92ECB4DD4B8C7DBE9B8A3BD00614A35B7BD9E4187F68C8AF448E45B09267
39D960D4920A692FD967358CAFF45613A1812AE6DB4A62146B0400F245DFF3D8
C391A5FDDFA9D9A4100198251715AE46CBCC7DF2F9BE6691B79CE6967EBEA655
522246AA9E837F39F1999BC08418A54A12B62049509032903840182F35ECB419
561B2C36D43E3102CEC57B8A58E46532BC2C3F5CE609519BAE4A852A3DB40FFC
B37C172B66792ADA50A6FA842125BB44C446B18804A42B5407B67605F58001E8
F77D69BF9D01BA23B36EE11CFB793B195BD4BB9ECC11DFC3B04B9EB22FAD6B16
E17D0AFC5974B91E196B6DF5324DFDD018BC44188E63C0A55D28789356455621
75EDC8F14CA5E94176E82B20CEF9DF0D0AF356487ABF0B563299A7E86BD65251
28EA76A0D7779A5031AB41EA07059ECC2C13AFAFA8AEE419D43C4429E93D9208
05E96332290E522C15C1AE0CEEB687AEAF0618554EEF9AFB7A50AB184C4D6646
7BE1397F82EB7A85DFF7FEF08D762E63E465FD2B17BD2BED7CFE5F7B103347F7
19C0848A1EA0EC028B2A574578CF69EB3451FA40ED22C16F1B8DFE03EDD38AD6
A57D3251B528C31379673FB1529A9AF9791A4C424A2874C0D00EF8F4EF7C972C
1D2FA4728E5977AA2B693A1D4A0EBCAFEDF511A461E4A4865CA1CA04C0E671E6
57EDD876C2E70E8841364D9C8E8A7E042A23833D25AC141FF1F6B705CA7C0B29
FD60C8D9E163ADE6A55284AD768E7F1F0F0D46CA4E95316497F6FC73DB94CB0B
79AE05AB671E84B03B82D688E3D95DEC15C86DD8D10F5DA77AFEF7EBE3185845
084731E3A0890C4632D8F9D8196B6AD43E15F3322E36FEFA77D26C34ED3323DA
25776CB7B9A33B04D6AC47E4501C0E3AB6F8F05E218AE28AFCCCDE87BF0D1726
0A4BCED8D3532340A46A1177A2269AE20BF8CBFD7E517982F9CF0D4F9458F982
8A664B3986F774A8E53E8EE1BE623EDD5DAC3727821536472D2381DEA09B8BB1
F73E691434A50D33DCA5593B6AB680AE19B2231D557EA18780968331DEEC1ACB
0FB8A3AF9DC4FED3912AD23C76C97F952DC8AE60D2EC08F0C85E2D35E33B794F
D8B021734F471C65A0A2FFEE1BDED30D4765A1F0230730155D0AAA52A966CCC0
0D3DDEB150C344328CD04AD0D8083E0BE447672358DB7D34B50BF2230C7ECF54
90C1D4AAC519D0313E2B371F7131209281701D60001C69A1FFF5732BC1E0076B
11804BCE07854589C4BE84B31A81F2784FE0D5F242F5ED8508E1CF87641178AF
DAADDBCB87A95E0EB45F47522BD93AD903B2EEC8D3C188F08FF2AA1C7D960281
98DFD7488D907A49A5C52892ED6171B0E25FC76AE99EAE915AE520DF86C1A46B
EDA4208F9A039FC53E8D60AA215BE167083176AA2E3A947DC40E7CDE4E907567
9A5CFCEDF130FBD2BD67D4FAA2F3929DFE0F24C3A0EE301101D63EE838986E89
EC302D38D6AF6612BB83188C479E48F8091E557FCC0849DED89E335BF17474BA
AE04CA1905B3762624A568CC911A30F214ECB87D0193BA0B6F67302D4801A736
D187122C5D1112E84725B12C2B93AF43FAABC38C498A1E33FD5EDC497CE81BA4
91CCE1B2F223FF6AA3E2CE0B28C3575F8374B2AF87E99A2DADA3728C9E3E0893
C478B3F7443D9A332101D6E98E963E32C1C000CA13E1A1CF2080943CA932CF05
5E41018138EB66FB67C22587FC14898051C4FDE207F018664693954B4833509E
1FD137D8B823953AA248937D59F2D6177CF5F25AAB7D45791021199BE22D8994
0BD35FDE81EB8BAC342210D5B0ED5550C4B54109A1B5D3696116BEF7A56B29B7
FA10CA7213829FCEAC430A54AAB1C77B24734D53B271D6B57F53D5F6B85D40FA
4E5913528BA06352384BB5EDE175FC7E481EF74C90360755DFBF7D9F9FAB94F4
AB4F1298FFDD276633AE882A540B806AB247982B2064115FCC2C0B048E62B50B
F64A9A860C3B953BA836E3E7313AE910CF60A7C2E6C17347900DDC598E1A8BC2
5C0F1007C1522522D8B549791B596E5804B7F90577F737DE057751F66170EB54
C1D730D4C7599D652F2DFC322AA7F265EEDEFA3B5BA9987C43E34B7A21AAFDEB
8EEF347B1DE9CD834797E610DB536D76C9184F8DAC563B375A47797E0F0C40C1
59093A6C73919A888BBD53BF4899A3D67428A633DF53752834D0B8998C31887D
0A4C231FE009050FC2D29D0327D95FE84E9776C18A1366EC96004C09C4DB5790
7457AB1FFE65DCCA47FBB39347DBC337F777DBEBAF006462A565364BD1C64F9C
1F11103391785005ACFA3D838E3DCAE83730B4ADC061318FB738328A4FA165EF
C4B59C3BBD5111001519A846BB83001640943EB2E9CF8202D34672B6E55B3C54
5DC01F32A7E2A199E9F45B099DD8A7DEBE298B7883E0DA25554FC82FE4E94B90
0DFAB7D97CC0F998B96AB3E3E182E29B819FD861E52B04E00AA389893E477F54
3893AC88C956283FF7B7628DEDC302E0E830C90E221969257543026AEDC02C1C
B17CAF8D1D1E869F0A3EDA5BBEBF135FBDDE4099314E3452D1C3006B69E562A1
62AE5CFF0CDDA4763AAFF2692126B4FADC3C4BFD139E015E0D1D3591BE5930C3
56E6B8C1A4F0AB29B1EAA43FE53F100DE329F2992ED2DD8BE4396C900A787F72
8B417168EE9C32721CF77B0BB8F785CB0FDA4BC3E04966334402F76388AD6AB9
DB661A04037C111998C73DD8F3EDCF0B1F51A01691E505DA03AB3799AC2758F5
630E00CE29C4EFA9548CB450E12BC8B4BEE5E7F224860A47751DFC2986440D71
6CFD5D2E9A57D84846762E7C7940B91077B03D7B7109D7E208791B387A55FE59
88405433B58091194908791602C3A6572740D8E84B479A9CA5FDB4685C29D7AB
3515C06C70450C9B1085CA881F4162D5EBF5239C62338F7EB882C2D4CE53D9F7
ED759091062E1DDCABCE4371C20311C018E4CB5C55AD278CA8D5550ED65F03AD
74393AB3183B6CFF11BA62324EC334B969B3FFBA35EDADA4AA78CB9659AF92E9
606476F8F8475D52E2350677895DC6E3EE8EBFA01DAED85125E5FAEE33B56AF2
6E3552AF8A5CD10A347EC239B465BE0416FE1EE4BDA71618D70740BBB31824F9
36E80F0F7F0D395E15943D0A90F2B930C579EDF743F2C4307989BBE10C6B0BF0
A640F2DAAC77D9AE654BD6E4359A140F0845EA7DE0DB3C13B8C18440DA54557D
A4B62DD372DB1D4D77D17EAA35BD7DEF5A54D050720CEB18CF86A3D98D4D0B88
323556BC8C21388AA2B223E95401B4A1A3DC32DE58928B59A875DAD61C76F5CD
D4EC5A431AE3F97BEFD291A0DBA52EDFD3A216173C3E69F47405B956E7F91E0B
F038CFAC465E3F5A9BAD0ED4572921C8A758DCFF0990ACDAAFB55D94C91EF75C
46CD9EF07F9D957AB2A2DDDF1E29A315D0C14B6EBF8A741D6182E270D23A9037
3A232F8540A9FF11ADA29B5A795C29AF1758A378BBED7FC260FFC27B6E2F4508
2C3CD8CE3BC94EDCCB1341B54485915E6EB58AE03B17825065A7D17F4815CA11
8A1F4FB6DFD790CA6F4D37A9B913EF8493B07DA95DEE465AE2ED8587B96008A0
7F230EDB999057DF4BBE7A6E4ACA33929E5909E1831354F7C4A1671F2011916B
845F3F2D5F0BF6ABD422B84905B7C67D40023A5C8DA48353FCC59444A3FDD877
FA602E026B5746DDE2AE0B93235C8367748C391D556451445FC55467F1699C5D
277CFA1C99767DE54D5F6B36133B9FFA869D762529A8F67B20F9BC80A37CA62D
FAB9676A91007F89CF2C73697EB452E0EAC3A4727E4071C660682B4DD547D16E
D59A293533DE22B29941EA1A6AE32E06C7E218BF18C1E1417E02C197B010E49F
7B468D51C05113E4D80FD492556B38F254A74BFFF2BEAAFB4F0EA0D1DA71F6F4
BD3613EA73BA2AAE3FCA5D2E78ABF50BCFF5131710A0C7DFFE0AF6DB142F9D94
4983B19A5C42053282E1FE3BFA95AF65BA0898D5292037CB52152485A610A2A4
C8C122765DE3BB17464AC3D5E49D4D64351D91D629B76E3B3E083DD3693A0486
D707E6922EF30EEDB86090AB69CD2FC3FA26A24FA3990B8A907262E2FBD774EA
F1FFF5E7B44914B91A9E1EFF78BAEB3E34660031236424456DD76114ECA36C0F
4B37B13F5EB9B78E996FA6F9D7BD0E14727F7954976CA6E533DE661FCE6E2C9D
F8E14AB4461A17AB11D4CEBE57F3F0B416A669E146DD6812686482263C58E510
AC6151A3B931B63B488E8ADA3B1F40FAE3E88D4E10674408048A009B7464302A
7B4A04BB65371E2448B44EB0E6C969FBC938919DF6DD7B4D08B28D965CD92ABE
574B0BDE8CC24F3C870C75EBE258FCA561F7130FC872799DE9FFF3DE079C1F2A
1262C5D656DACF1E1D5ADAB02DCC537825CDD5B0B5CA2152A5E565C68837C7D7
B22C64989E33176F4F30CACD668CCA281F1540F601305139C186954F4844802B
CCA4FB5A9D98A48AECD259574415D4F08CEB4910DE625BD09E2E5BF64295D6C2
6DA5A12FD4AB27F23B7947DD311D174EEE271235D4C0D1D5FD270E096FDD8292
CAA87956B52FDC56EBBB2DFD0824053212D1AC146978207C66D0B692FE7C00F3
0D765763B8E3E988352D20BB5377ABB2CAC193FB866D3A2E7E499D9D41985AAF
C63AE241A5CBCAA4DDA66400689FCE00CE67D86629F705FF22A5E8B9BC3AF243
8B42595E3C6609046960C6136A3A6FF4526CC45589E132CE8416CE094B04BAFF
97E1F0B1FC84D07C79E359CE695672095B1A34D6915C61DBE9E2DE2D6972B87A
7EFDC0C2CA1829A7770DE2A3A429CB307A9C49D08A03338A221F0F7C91917A16
AB20AEC75695E5EF6A70634743FB1BF45B807F93E9572C5DE717DDD23882413B
67E1B8CBB8A1E05A27FE64CC233A371E0C934BD72DBD4B674B6BEA439D4F7AC0
7292C6E6D3F4AD103DE7E92DCAAD197A57DDE7BD86D062B96F8AC0011A595F39
A91F3ADD5589B2AEB050A60B2022FB744F9FF7E4B147A7E76BF440627626AF23
2012E8D75E05DE77136D94220FAE9A4649B4434D5B0E99626BEDFC6BCF34E331
62B4D53D240FFA267FA78D43FF7A1BD369E48C3458B69664BDA403B0AC7F0CB1
97998138A7EA754E4647F6A768761E22F8B0C1D09E7A65332F2D28DF233B672B
8EAF85739FAE4EA5BBB243FDFA2975816FEA4D047DB3D25CAA64428C4413B028
F4E576E76655AF5D7383AF60BB292C2DEDA39FD4156E4B99BD1F015D12A0BC69
30ED3C8BC1E7BC6F4FC8A671CBC62F295399B61D5CAC79805BD7D06B7F9351A0
B1A8129670646349594BBB414312A9BD4256B7E56091E31488FE012662A5ED1B
28BA287387EF04852E97F60D6FD4B5321EE18DD2A0B1C2E018C6F579B07F4EFC
72C42707AE4F7F696DAF8E758DEB798EC7587757AE0229C0596A910B9DEA5339
B39F4D0FBE490FB4AE34A2260505D65F41A76A4559614DB30B75CCDC2DE1CE57
A7F0F28F3B309194343FA54A3FCE49F0E532AB772F246121389CDA59641CA597
3391F322A92E50203F8E9A72BF1FC4013D2072AD9B4C6F7F433285B532553E9A
7974D5C08A3EB57C3F5E4E8ABA923B0F18BBFA0456C6FA92367F53B0FD65DCA7
4500D094B762C7AB1FA0D55CB426A0FA22F9AD60D7D76F9EA3124125A4DAD48B
7D9282C48B173BF4E8EF77DAC1600B475D369BE65EE8B3A08D533D1927080952
18C281AA2261407B56A081EF9CADBDA6209DF3B719AB529E68223602A3FF2A5F
A94B0F41457491C504E2CBE7647B82406C7CC2D305487247060CB25DBF202AD2
1CB906A6E988DD7C71ADB99BADE7F8B135DD4237E1CC96923558E48CFF56D648
F7FD36777E7E736772CA37974126509DE09C8C2757A1EF9C33F572545AD13144
EBCA507191A0236E155FAF7B7BF58584DF58896FFFC9DFC56CA1484972E41B4A
2F9038ADFCA14E29CEBE5E899A895EF10E39ACA48E5ADC78F94D56655D0BD543
061F838931AB4478F819B6C5D5257C0505A574CD5485DB135B65A84568C69949
4BF1E364341B24E4FEDE520E07F1F7E0513786FB13CF119336B360D4FEAC7E97
D37A503FC313770EB13E7865B2F5721287FF8ED22ABE1A581E71A673F1B60F83
F054BCC692DDE38940FF69B61DD4BED5E65848B241588E2339AC3E07AA83CA6C
F6D4DD781129AF903A2071B35FF90B232504FDB57AF169F91C85DDAA92968E0C
B549B30C8B4288CD98CCC91416F250CDCE18BC78856944C39863D52666C02320
073A400E7CA0B8707C7DCF6D14A2E7A885375C7717064BC5B4AC9E4337E8DBA4
52AD22FF83BD868F8DFC8B1C9DBA4871DFF7048C83E3FC99EF0732BD2235F387
0585C36A15A35C4F932D039675ABDDEA0A1A04B9E3BBB3391ECD088E6A5DEBD9
3A30D382135C74B2E6549C61E3CC3FECDBACDCEC3D58F0188F9DDF1AF6B54B17
BE08B1F4C6F8B40F0090E0B4A7CCCCF2375C5B367CC486BAD3557C8A59CD9766
4FFD4E9206215C6E88BF8F821B22DE27E2FF609B19F38FEBDED2A717C720B4E1
ECA66EFF0C788FB33E37540820B70EA7513B551562D9F52660C92F0AE310C550
3BDB16CDB8CBEE7B4777D8EEB936ADDFDF8C2984D5CA50E5F0AB9FD5CE3C97DA
FBA3F0861F4DF81BED3563D83F6AE3E9EB9ACE70A38A66B69EFB53F624A5E75F
E57EF945637A2AECEF6128ADAD593B9B7696D2C74611C3CA16907A9B5E0EE8B0
33795048553769823BE18EB511A1CD86D322C2604681216D7393E4F4E3295216
A512F94C3CBD09871A746E2BBDF426D73C91CD13C20A6B7ADAAB97AF80B76ECE
9616F295E6D3309F75BB5BD3163E9698D28D23BE084ED9561B4F51FC31ADB532
18BCE98A72E67F854ACF7A84435B15F0BE2F8CA8D40A80BA4921C9681E4B9F14
CF8FA5083EBA79430F6BA59D198A4B8B5BB334B16B70C359FBFBB7091CDA7891
3D05DA52E3EC3F7E36B4D9F1BDE50D226CE0762A23447E8D768F4A40B939A52F
4B7DF69E0295F6BEF10FF79D8D9ABEC7939485D7C2081F75A7253A9A35AEC2F9
2CA03681281ECE9FB5B5445AE9E08E65D09E1AD78B75CC247A5634F4187F3E46
EABB7A1644586449CEB9A7491CF2699A269E5A36993BC258E4DED34EBD1F3721
DD07EF6EFFCF3F112DEA5245198DF3226EB6699B7C279124E92EFC88BB326990
ADF20379D336D08FE86D624CA923830964BD0919266E98D21B9A5BFE88E762DD
F43ED8258C1995028F03AC464AA085860EFE965681CA0453E22D204B83A1EB77
5861CB8FC9914DA2982168FB97421B141AACA170712C7CCD3F8A6ED17FEEB5A6
1786C4FE6B0AF892750BF6D3D67E884E0C99B861A5B45154D3FF754428AEBAF3
59CC7C81CCA42B4EFA25D33ABD8C2EE5C806169390CFE6A7C849F280C7BF4670
AB30A583FDBAAC8D5B9251FF1BA495F1E3EB367437123DD9FA509AF7635465E5
F36895B34D610FBBAAA02F7DD98C75490111AD6A03A824E4F2D28C272B6D9413
4BF3754F4DB17E4327303784F2EDB3DA4CF137F722ABC76FDEBA4918F1C36C61
4CF1135A92F077AEA14AF03B424E67F31F68BC2E488B851D3FE8B9ED0800C931
19F5AE3DB84DD9F8FB991DB3C4F4E4C768221807BE574975D17D8E0A12270602
5E26E4D4E75AB641228EEC9CC47307062C8BED05A66C1E9E9015DEF6388EA7E7
8733EE8A810996722B80D55FB5B88FCFC6B8C8D7CF40232C4161F01CBDCF52A5
76AA770F79CFBCCCBACF6CF0CA9D61C87407FC227ED3906CA27F5D1D667F32A7
045E7025F2559B1752B8D2797840E5F230EB97917AB18C886A9F5945E7BE782F
28BF4DB8BA1B6DC688150D82EEA9530D18CC7765C27884BC153A21ACAEAB53EC
717244C451A0623E19CD3A53C344F43133814436EC10E64971D680B9FCCF6BAE
47AF0B349DD392627E3C44A8D3B88FB92DDF066708A138D3E308D4207EC3989E
900B0C486B039C0CEB371FF3EAF37BD78FA248092BA79E2DF14B61A7632D792D
E3DE7715A81DB7360BF5110B5E85349426AB026CDDB32072140750A83860A8E5
789ED7A205CC2F09C312C290AB966D692DC2751FFA261E5176E739F0CF62999C
4AF6B4B69E71892CC1AEAFFD2EDF412B041F963EE9364F2325E4281743C911F9
F003DFB2BD3F5A02826CD5106DAE8771CC9C117E387E60900FAE085A1A00B34C
B7CED0429DA989E126DA7852BD64C5617A0D5B97DADDD3632A59360437DD9FC1
26202A3062F218582CC05DB66A65B8A0F9FB33C5A4522EFEE4481B96697262BA
63F5490FF79AC9C610A5B9C14DE92994CC4C09528FFCD6E5ED0E6638FF769912
C6FB48E552AFB2C22CF8D9974816AC78082AEDF3B21ED1032136EB74297010F3
9CFC41F5D12341D331687DD62957DBFE03533B67E9F2325218BB4A8C3EF52430
952B98B2B75D602D0C7AF7E2835DCEFE194A58961A1D297478679830D453C21B
92B2B5C1EE92A571865E7CBE2C9C5A78A2C66993A23BE8DBBECCACCD51585DB2
F102F2E8732513438EA48A2B2EB5D21926C66EFF3E0D81B922CE2DEB21A2503A
D8BB9978C2471360BCCE8020905A3A9D81E2B169E3CCF1411A078B4F25E12492
EA14D790157D79EA37FD50E3B78EB31BA333637D19547C8D9272ADF5FDC4845F
A90C392E39C174536378634388321FD3BD84A5074B5832029DF39640709EDD3F
D383913EA936E1CF66A2587860FA3730E03708AEFF3A0E6E5767DE0E3E06F200
9D212B255BEC78F0BC1174FD9AD847D795CAB6D614091F3DC08CDD8A21EDCF9B
030B3E0F0D76C4286B96E94D56B48AEAD6B27FDC77A18B859BCC00589F3083D9
28E458352D0147D5BDD23AEEB772255027C4615F3F70C7D6FBAE5C09DF7F9358
B78124305A8EADFC4FC87C0F98B69FBAC9CC84A2B1582841C0F1111101F41B3D
C1BCF990B3055412CCF40DD63DF7143599FFB10C5D841AF76E112A532A2A1554
0CDD620EC6D9CA69A99D5C8D1121529E3E67CAB683620BEFC187F3FC56A0D576
4CE2641C2847BBDD8482AED0CBFB0270C944F86E6C6BAAB0944601C149608E99
E77CE05E528BC3852E6BDF04C83FAE03E8E4784B0624C6B9436BD78BB3C78FB1
E4EE2A0DBD95351CBF61F0F65F610D2AA52400AA86148F477A62CAA3C15C3E29
2DEB1EF58BD06ECBB6CDDC0C12E81DB036202EFB584A44E00E45463581A9CCF7
8B18CED46610ABF9A19099227BA91BF57A15991E25CA42947D0011C77BB392AB
7553EC16F060BB8803B9A2F41244C4AF49BD0B312F49D576A27C09C6F70E6ED2
6ABC191B4B128409D1E4EADED9F0AAB6C7A4A2694676C46710F8EBAF73E8810F
E15898E01FBDB2DAC0D4A2FD120FBC0D19B0B8A9EB824823D45F89B01F9BC0AD
59F3EF8EF041816064EF39A116EDBCACBA1FB8CA02BDA95065310AAAD08F5B4E
18FEECC04A01AC0A472EC8B042FA743D835956A633DA53F4480B2D82F318C338
8204F615612B4182B82AAB8DE8591BB4CA2FEAE029020065C734B18112905033
B75CC9A4DA4EFC1BD0AEA5514551F88439C6FD7C72C36F2624D8E735884D5E41
C3E0FF4C6770F610B30492EF60F3CA8676420063FE869B2E5D822B6BBB2EEF5D
3188D88BBA9C7A565F99DD0E0431110E3F256A803A9D8AE33E54A8FA45502B10
7D330429C7B84B0EE4199227EABDC822EE36F3045585F80B7C4B03250E700B13
593A08A2F46BEA0F89D641E2C21EF052C3742C362675BD7B57B096A0DC74DEA8
584FC42C47CE0874E3C26C2989E54663EE61934639951C8F411DAB08B7F66862
D21BDAF00C18DBDC2FDFA7CAC25FCADCE063BA4E976505648CB23ED0AAB5E8D2
25FFD9E5EF9B7F82B1A0739B7F05863C11FE5DA5A44E83C60D083B05704F9C7A
D4FE4318E9B36AC236E83B34082CB508BE87B33545C5CD66D863AD96F75E772C
5555B1F196F7E1AD19A84B6328A1FECAE566209E272935303157D7028704A5E7
929FE61F9B17E1DABAE49F8BC381DBBC65DD6EDE10D9FE64832C8D6FE4AAA8CA
52A89DAC2A08E1DB8BFB01628FAD49EC4F859C3CF71F6159C30CDF17E6D6E4E7
8C2B6BCA8636F4E1ECFE76AF890D5675ACA2F65B49E2950E47D9E34B3281BEC6
3A292CBCB65048F95F624AC66FBFEFD3BF39C65D21129DEF048E25251203763D
C1857021139A3A9ED9132401C35DA08CED540F04565095391B1CAB51A4709B04
51DB2EFD67CC3B2507DE7A16AC78B6BB24BA4C0DEF0BDF2F845FCC798F25C4C3
68B5D01FDD2E561D8311AF6D385EE4F35F9EA1E1FB9C281C9DA0C4A425E2EB31
E8F50EF9613D9AB5EA647D0EC8CF63F82006B95077CE20275DEE14F5DDD56740
1BA444C1078B07F100586310DCAB093B52B93F472B9E811A63D4370D7A16D50F
E72A31A39C177539CC9EAED0738E685D2BF7C115CD21CFA5A935F3349A39803F
3E777BBD74CFF9C797F859812D3ECBFEBC3A07B3B976C2E1DF12DF9585BBAEAD
7DE1A4B77A0101210DD3FBF38E30A1A986907A343E142B4504C912B1B819AF36
702AB94F42EA4942B653F91A3DB2AE0DE4DE156E5F6C42C1479ECF72FE8ACF7E
16D26EEB0FEF877C03AF6444F6FF65EC93625A9449533A9D6518AA34D9F230CD
3A000C25B795304DB5DD31E5850C79E9D2DE466BEB9E3B22DB859C342920B725
ECC99E0BF2425FB4F123843B42F654740D2FE7CC11D28A99829FEC519AADEA90
BCCA055769B9398796C7E70F37FFC58603BCAC92F0B0F80400281ADCD6F83DAD
26B3C76160D8DA739C7E07CBDD5C85518FD5C1228C60EF150D096B31D0DCDE64
66CCC735911B252DD17EFDE6BB6631D936F36816ECFC2C6CCD702AD2442D8C7E
324A98AD6D2DE2A3E7E8CC41B59C24AD21D0D73EDADD0C4843DD51D02A969EA0
ACCE59907336A48CC51E3D3569A98D8F29EB0DDA29323C2D0FC948F63BB62F0C
F2312BDB6FBEA042DFFFE925353EB5C35F2D1F91452C32942405B39CE744D590
6653074A943757897CBE486D3B946F052F03A7F6F958B74FD05F162222D4D04B
3DE05D0DDFCDD5C0EA7404D0D356A0B0F4843984402656389A07D3F7A135B26C
085E2D60313B35C205C0D418304388C6E383402649BD30EB8DB836124B6BCE42
ABBC21EF580CECF8690A4D683A3F97BA9AC4B9EAD70DAE0AC516625DB2C9C05C
D5CA3A21C669B9B063BE0702B40ED8A8F63F6117AFF32810E7562818C3E58C6D
610691B76D03AE14F97D69E69598DA08E5B4147C67DD541AE2905011D5487C32
20D2EE9F9DEE3CF81D45809250B220C92EE9AF1EC65A0E4F8546096E89DB3B6E
3CB3DE8B4C48C7CBF156DE1CAF1525C73894B25D921E5F346DC784801964007D
8818F4E3EB6573279733D2E336C25F2378F0E9532BB4D95792EA212BE1A95A05
54EB2991B081B207B957D5FFEE57B0A92D6C8855D835EF83B70991081F6A3E89
AF6889D53AF35C21423996A0E1474B01E40C82DA5DC69C09317B283BCDFD3DBC
3F0190F90CB177F101F8BC5D1338DEF9AA40BB484B8F7C4C24A9B578A9245B05
315C69ABAA6D0FB973E857DE822AFF784C8376F8FEB0FC5470BA9C2BB4506E60
F6ED768BD87C189205D33C2E669893BCFC076D63069E9806460B4E805EE7175E
D52285BAD4E98F3F3DF2B215D760296C54325FF1CA77CE4288746F24A1C5D363
4632B5B1B3AAB1D8A253BDAC2DA77360ECDBA5FEE89FEB1B2D6146EB0EA862A7
9144C59CB37B345AA11DBEF882B589F78F18BBA44A09A454C9F572854D5BA568
4018D6AE84AB8C2A595514B7C28343052B0B8205EA53BAEDE9F2CF58E8A437EF
0590531471CFB898E9DA644D43D5060527167999E2F0918637B3747CB95538C9
A706087F129FE6AE2C9BEA8EA89C786D31E37F91A7783352AB2BB232BE088FDF
4BBE845D6B0228B6907B43E7B3E6B50921C0908E671219730548FFE450E1CD2F
0F466F7228C70CEFC1ACEF6F3F10AE040C669B519BE5AC3A361FC92FB956CA5E
CD09956785B22E3A01685A8F2F6D4C756B79C79ECB8F2D7C7A9EAD6B74B4E683
A115FDA95AF7997A84F884280B067D7B67D90F4CFC90A68F03BABD590B4D9398
3BAB3B20EB600E924790FA787A15BB6AE8837B9724BBACFF34AC88AE19CDB8D1
2864BDA16BBF07EEDA4D1042BE0DB09900E35C654036F590B65E0B22A561AC9F
D405B95710A0E7A691A70105CC9D9411DEB39330898FEB9E24E6076642695EE4
553F1CD0FF8C6EFD463ADF41DC31ED4D7567E810E40F3772BD23267580B80A4D
731457F0CD0EC22F643682F48A43F7E1DDA5ECC6797969B0F2A09654459B24D4
6E6F18C7FE162E37E955460370E650B2F47F17C0285E775FC57F1C43D60B7C36
10CF3D8B27D2004139302000A4ADAC5F21915FE2020DA0D9EE0B2AFCF9F7B6CE
1751A5903126FD57CFF5F259363BB9B0A0F0FBDAFA6AE5F73E2527F781AAD0A3
CE56A100E5A9B47BD05197C22EB1C93BBAE09EAB4023DEC0EB66DF13C8C627B2
88260BBED384A5DB96830756E4EE5FBE5DB4592D850174265A47B498430901E5
3C58E76FD552D3D6E2CDD1382D26BFE38B76DD996D686E6AA9D6C4480BF87AFA
93D46759F2B552649187F1D37D98866BFB8147C29B09DAA4F0B8011B97CB1E4E
E444268CA12C05A9DCA8FB400D629B7E9BE718A2054B3E092983832262A4555F
2EC5B0B8383ACFEE3BCB1978FD5211C9F4D898E368D0AD56F6C37442EF46D499
4D8D14A3C733AAAFE06DA38023E3953AF18DD094F5D8CBFED34BEE0C1E21075E
EF6C8AF80FDB975A29B10F523678701155FAD16D3AB97D46FFC20CF15F403BDB
E67D9B188DD2267C7C77D758777DD5C13DF38D5D3AAF84F2D9DA3DD7B3EFD4BD
FF2C3F50C9339C52355D5E16F9505E660587D812801358123442F4652C3B50E2
17FF5592E2ED0360690B59F533410EA76166CA9403F8A4DB4A6590FB0C8E41CF
D5FF603126E2A9644357338E4EAD932EBDA6172CD341F5961FB4940D1D88A11E
AA3024ECA377D98CDB59B80F1FC013EF48B1B943C0223E9E0B8F5A85208B2055
E48CE3632AE0892339BB3043F1AB50DCFCFA250BB7F4ECD06EA491DCE7F9CD84
AB302E78E881CEAE6FDDFA1288A615956C6171AF500166468123F20131BC8969
A7E52B75C58F56464F5078FAF8E23D1A8AC4AF90D4076CC6D3A5F7467DCBB353
ABCB9A836C815A6D5AF3EFFC2C82A5A8D5FE0B0BC4C6FF366786C489A5802B1E
3F8F6FDDA90239DD5A4529C241F4E7C7E793BEB1856EEF76A8FF791864CE423F
DF8BF9032FBC482C131813AF3D35E9CC0708A1A9D2C4CE5DE8E71C3446E182AF
7F450B741E0C7732FA562F17833D72422141594311B801200C292FAD21EAA990
B3F5A9FCE70B6677A014D2FB7E9242BADDAF0DFCB0FB83CC2014A9E9D8D9D01D
034C220FB7E694DCFE132C62FA2C2DEADCF67BDFAB33669B0D494616E9B18C4A
A9D7E8E92BB6A727FCC3392D4C1BC36104D0106BF145DEBB12A826DDE4BD9A44
870DF627F78C465D6AFEC82970C84A64F519DFD59E952D35C1DAA8A23E18B129
C2CE5D892F57A179A6ABCB2C94AA7E699152CA8A0CF4D491DB83E502333B879A
043EA142C56BB3D2881B0E0E1478EFCDC72B0C1C6E35EAE92A5A25B6D1403A5F
885F9D5F65034CA4BB1787BAF8B1137F63E8FA96A31E089765026CD256F2B6D0
3F173BC3B1A7C7CD7DE293FDF21FE9F87F95C66C7DC5CAA97D0E0B59F3102950
EBEC6D21C553F939EED03866E96FBB1F2CDA201BE277A33D209341B369E6303F
F96CD42386C234A995BBB1B0253F44941013BD851E3042C44AD4C7AD4A4690FE
9C7B5F2C0D6D7D4778D8417022B03C0F23A49C908586AFD0BE6F322E8EC86EE3
7E2CF6E4DA9E50B843199CB0A50711097B98CED25845D325B22C7264C261917A
1E629621705B01B780A225D130F14D43F0B1E8F8C7D9386B83FE6D1391F68C4B
0770C47C49C310CDAEF09C7FEA6FCB6D74BCDB015ACD029A37DAC5008B6585F9
90D26A68F0B8B4E37BECAD3EC57C64739A9AD7B17A7998EE19AE18337EDD4819
D4B5B64A6A1C19C87B1580
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusRomNo9L-Medi
%!PS-AdobeFont-1.0: NimbusRomNo9L-Medi 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Medium) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Medi def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -341 1000 960} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E178732AD0E135F772215
EA7EB7EA7641D31502E1BB9661E7B0E875AEE90400138F2AAF4A8686C73EAA44
E5CAB467770A3D12E9807BAC97B24A8EFB0E276760F4F51EC7123C43BC6F8DCF
9A2F496A9172813FB461FD870763306B45670653A9780FF409B734CFA74C12CD
150B03344295918C4ED893FB620A9499404B83C71152BF2F2DBF769000D116D5
EE264C016EE3E1241018F59544CCE53E5AEC124CF6C59A4D7D7D511ECC9AFD49
6608ADDD237358D7CF8B4D1C5BD1158CDF2D6469D9BD6E6D9762ECF34D1C3C27
5F69900E0D12AF9B21F153585742E999870BEE3DFF6309CD82968EBB40D9C269
CD4306654AAB6734151132DE4194072485FD082FBB6DFCB3FDFF9E1FC88D9483
8AA64B5825293978C70C9EC095B18352BFDC34B4BE9C939384E3281BCC6B1808
A6B61EC4E47BB6AC14B105FFA7ED6AE99A1CA0B360D1A5C24E0FBB55C66F5811
A5CD0625654654651979A8C4C3612054181CD300CD42D1D9CAAA589118D6C7CD
5EA8A9A0C639D5539430D40318F4B739DA281ABF2BE2765D44F45B218BB192E1
9EFBDDF7777E8730FA7DC0651BCD5D68EB743C51D9CED55403021D45F77CAB5E
7E892B3D1F875DA86C030A2387487DBAC8795749E849EC93439C9E22EB20D11D
07DA0F09EE9356D55B8D0D8555F1B0EC98C72863B376D3436E10DE2FB1AB9453
DADA019DCB64F6D059AB3A95B28B94435004C9A8BD3FB80E2B9DE0E330D03622
3AD965B4283E6DC880A2130185CDABC053C52693CE3F50557F524D7CCA9BE05B
FF9597ADF5D1C432C00C0B0D8EC2CA8436685B4BF3E2105B89FA6CC787B77637
248796C2F43872B3BFC8011159C22EDB7149AD8932360A88A223CC638BED257E
04908032ADA750F17279F7331189C322CB5ED9B66E502945BEB1EC68B1C7BCC0
2322EFD669C229B28CE1D0CBC0005FF967D0A4383E29538AFA13D41D484D739E
487D497DEAD8F661847A5D82D77D91219ACF666E565292384728E58E1A489054
8C3E34B413A6A550C499218E7FCF43694CBEAD016119CE85515F5EDAE3CD483B
A0F32743E7A189708AF0CB6FBAB22AC8F23604FFECE038C838472CA40ADEBF08
47AB1D450E07F9D51828D25DDCA679E3FAE54634A37AE1A5A778365C5A2C8A27
64085AC775AC132CCF27CA164C4721F67B63D52E388B17122F15E5DF391674CC
B6C9EDE307D79E390068970FE0AB210337558544E8CA59BD81BE2A2261F78F0C
0818078B97D227298B84B6450BDD689A1085FCFACCEEBECD2B3EDE3B6561AFC3
A88E05ED5D96C837B3386ABF1048FE5CC2AC87A20A2F4A4332E04AF4DAEC6833
0660124E1CB212491DDC3FB1BE0128C6BD451109B826A3F23AEBD548E162C8F5
00795C37140E174238F7244B70176FDE8BB55FE63644139AD51CBD4EB1602085
03B500BC04C5AC8C3ECEF730F19B1FDA0404D57A4CF50A7A0C598C94E6C4B5FA
CE948FADA3945615757B4F6E23CDC440D0080DABFF2734C47FE82783709F7FEF
662FD2247972AFDB47112BBA53EC6B0DF67C1F9130848D4C00F351F5EF1DFDE2
2FD3FE33438AF5EA6551401BBD1686E75ED13F2D9C1D079DF942D87F704CAE06
6DDC7393F29B4D933306793C754111044E6E722D2FCFF856FA5F423972AC19B5
BC04DF4D12A1AA1ACE9E4426114DD821579901B8563C2F6639740C34B0DF36A8
825B776FAAEF162FA24EB17C99F0E8F2B4D90FFB8BE2F427D339D1EEBAAD58B0
946C6CB25C2A504B014DCE8D922CA473ADFBFF85285CFE4B7008D30261A45ED8
C77C60D7FD136F67417FDD31346A690D7804DE2809825F71D5DD1A1A289CC921
6E531C9E6473D42A8B3B0186016DA79107228DED1B4AC19DBF653EB0FF18A376
FF6FDE547A4CD3C7D183BC275C8F03EC5214CF8D728E34323537C57C4D9349C6
85294170750D3891D7D3447483F0977A944BBF51C1E2DAA0AC5EFFB3126DE50C
70065D2A42364D5D18B9C00094C819D594746B67554206ADA08992CBDEF437D0
EA9EBD6CB8017A27E311AE62FE08BEE58F2B33AD6AB36E47A3E91301863DA4F8
85FE0CF685B6724744DCE50D973B0468FD4F84E83950B76B1A05B4DC730087F4
5FEE52B749BD29F44F0EDDC2A33E97D36AB8A7DF9D1BCCE6038D184DC74E2E18
6A664391B7B84E228693189C18F52673F12725F3351ADD2CCF348A72E80463A0
56D041B5F2C74A612BD655B38DF603DB446FF707D396FB0630AE944938B0FF61
097B8C98ADDF18647596B914B7DB80614C0243F3B3C291206608A791091D792C
1DAFD35FDA10C0E14D125C730ADCBACC2CB9214A49E4A05E2A67BC0B4901E9BC
FB5BDCE3DFEC18B9C0BCEDB0E2DEF7ACE895397DFAF366B982B1E79D6A18D590
9E018340477402CA73CFC7A2564942BB5BFCFF44DE8B99D6205FECE23D72A9F6
1619E09C929D794526D5861D0184F4956DB9D9BEEF25BF02427895544C4F20B9
D3F72A9B0E07A2F65B9923E587A4AB67D5CB21E1D3D968967A1447E5C9D5156F
2043E9B5755BFA1E9BFDF47E63B2FA3D45790646F8B3F94876E24EA10115DEA0
1BA7890B3A1123170D993F727ACDCEF79B094A8CB83BDA634521CD754B51844E
7FDA50A9095E080E8FEFB94BDCA9B0C35BD20B737640F3A29959AC97AB16CFFA
3F66FAFBD0B269C85A2743EA914B835C049C95D62D8089E4AE7B8D46F33B1E07
3A873D33E038A136F8256B7DCCA0D7503A0750027042AE2D2DBE35AE5B6CEB2B
2A3C2A5085BB0E87DFD0B90AC7CF3725FB707ED9526ED054C471B82AA52B6C09
0D4A89537D321DB5621BE2BB042A97301D2FE70F509161F730765D9FDBB76901
4EB777D03A2D20FD7ED73DBE1EF745F2E3EE3C0F379E76451D99AA82119E8EEF
A0F30FFC24EFE5C7FD42DBC5FD7EC83D687FCB4D1D8550643AB0BB89428A16AB
1066530BA1C89585BE48B92FA6A323C0FB989D53EB4A5AC25A0858B10DC043C8
4036588A4234FC70CC583D630C563D9C33FCE5BF7177876CE1CFE159231A026D
3A3F89047579FD28BBF82F9DEC7BD65B80885F9C3574339A61253C3234BF4864
C7109103FBDF1B4DA7CE2B7194624D33B42527A190E9EAA689EBC39EA345CDF8
3CACD2D870186012B0526E8F49CE50FF9DEF3B4A4C1BEB3848EAA347734A49C4
09A009674D3973F49E02479CFCBCC6F3F4448229D15D0FFA4E22B5A0CB4FC82C
4BB848D07EDE0C150C876A61EE0592365D4A01DC96667E2896098DC756EB95C1
625B55A0E9FBCE5C95B7240F7804FB337193FB904015AA56AE725E5AEE820FFA
C056863E893BFA770EED87D94F45B85F3948863924D5F3355F74426C91FADCA2
9EA131D482990CB64C201664D2D13D7772CC0518B7AF4FC2F56904C2849F7F05
BD9E5029B6C34329FA3F773B665ADFF0135A65ACB5311765991CF95780825F9C
769CD611F343C793DEDEFB0A2B19553FB4D299C662F932D9ACE5DB35BEA759F5
86AD85B58F0E770E97CE991AFD7C74C059790FBF0497F8CCCE350E08DF242157
F4D3DB0519EA9095EE0320B1B6AF51F7F499C10BBFBDCF134E1D1EB8B3146101
83673442C0006B5BC5FAB5960A2E3E914A4330CADA810A961053A1CE69925714
8F05FF52FA676F494084491532ECA79ABC48A480AA1D487B44D781B5BB46CE54
5741EAE68EE79FAB1AD93D487B55DD41D840427BD445F7F0A633C5C75AB4DA5E
D0E87C1C9CB7BB49A6D4B8224C70EC40B6CA02265D3C7159A63851DF7FC25EEA
E4AA84A552EB9F11282AA5868A85B43A6DF28A9B352A56D25DBE0BCF9CF6E582
3070CF6E408ECA369B0FCB775E115A31D321B7CA77B4BF93A6FF7312CB35F155
931BDA8ACF7DBCCB544FE9AB1E30F0E7EB4CA1F1E59DB376BDC95DCBE496801B
809649E22B019F7D0C44B48FF198FC4BC6A7FA852C81D0F3B962DB19DCB7A289
E43494FE75D5E0169F111A03F47F96D84265D942ED54E36A6985DD1CCB62FEC5
AE724457E9628C077A0C7218B75A1730529B3EE149554EB95268A1A07E6E7BCD
1EE19F12431DAB4869A982293003C83BC5371513272676E14F6CE80610BFB320
B3D0914BE2359C910FCEF969AE162EEB5128796E46CB0AF4B537987C2ED552B3
7D89AC319FF9987350C3D9BCA7F584B4D9E304CF61456FE8BD1CE8C88379E352
496A755F2590068032B92728D8D181B02711EE2C105FBB16BAAF98F469068B96
FE758E5F6AFC8EE6E2EE98763933D814901FDEB3C6BFCA7D5B5D62A97BCD0393
1315E78D198FB6DD459C4FA4D4D5663E33173E5C99CB752EB3EEB45A26663E1D
DAA071AD0580BC14CA70AEA97FF4B704F7641BC26DF2D3B6C69E17A074031B8E
C4BFCCC16DC273D4A01351607BA2BE87050F8AE8EA728056655F9D9DA1ADB426
600F1031E55353DAEB143ED668003E3196A1B017D425EA62AC3112B58FAB45A6
0654591AC4B14842517F00FC1D629B6246DA4B173E17D86169742ACD19021D74
A1940C45FCD7F44AC16C85EB8F714DD0B43D864F54FE38A902AE6D7304413D97
05D505D7E7D4ED50CE2FF86DFD7F135D9E5C692041B40DFE0F6F3165A4E34E80
0005B26DBEC70A2850505C5CCA6F46D2C4019EB0EEDC660503269A4CADA9C9BB
CF1FC027311D4598C10A9B7550B239E8E03B81B713F3738BC8F3C16DE6CACF4C
3FF495F0D3B1317D4933E1E097ADDCDF6C39A8267B043DD1A309A1F1C31BF683
F9E3394F5DCE090D90C29776BF27FADED563AF292C8F30EC94404B83D25D0B9C
6EF72F6CA9EE71D716A24400838BC9155AB8D6C978DC702A7278890312F6E32B
536B9E7B2AB0A08A26B00280FE57F6CB0CB72BC26EF0ECDD2EE04EF3438178B0
28CA1BC3EEFB3E577C48B5548AF391D8C2BEA9DF0505C07E64B2D4509D1270CD
BEFF01A02D940E4940EDD811F9173B6F38EE9682307719C216B78AF7D2C3AEF6
9D55E28F1C35B0F07E78405DBB56FE1FCAF127BB879BD6062EF555AE24118F10
5F6770EEF2A57C5D44EF25E03AA1D0FAB54AA5821C4CB010AE179F63449126E9
CF217F7B9B18573B6CBD958A80FA14221F9ACFEAFDABCD2E99512D7844262AAC
E40E04F2BC627789E46B9910B70329CBC2AC275331FF480589012D7881C8E03D
A740600A25C51B85D1535C7478549B57DFE1580FDF050DEF65C161371032BE49
02BBD57AA5DC285EA30F18F36F483A641593A39E464E463B7B35AB3B8B673948
353219E93686D71738FE955FD7C67F11323E059BCD0C4E764AE61D7F5B5320DB
4E6C7F70B76CB486438D247D02333EFCBBF060F416C0B747EC5BA54AA7431540
84CCBBC6E6D1CEC49379962163A2B4BF57C589CE3DE6B2E2B8BFA66D87D20D1F
0B525DB06AC0C91AA11485015CC8BF8410A9A3943D196A412094119F6C7B8423
48893BB54CEE91B713822F634A96C5D1923710DB4B98B063FA07A6AB8930A0F1
A91C4A87084317B0021AAD5B1ACB2EBBF8AA9C0ADD7871030A2C1BEFD70276C1
8EB95EE1DEE2A74D122024D8908193BFF7C859EA8BCBF00C29AB8B417E2D6061
A388518B2ED68C57A38EB777CF374EC9E2840D004128E560F529B5A0225C25FA
4A1A479CE74E73450DE33CDBDD3C498417FE9433E3B6F2250FDA0DA16F257094
D0707ACFA605AF27BC7C271E0FFBE6FE4DC59944B5F4CF66AED72560D097FF0D
DBFCA58F432895B2FCAD0770DB57D747E2CD3E5D7EC095EBE86A3FC84D6B43A1
D69471CE6B07099A86078C8303A243E64747AC9BB1C1720D0D828005E45C4829
5AFED40F9A5C87B89B8C1DB75297369C388B60B536E896C8FE14E25E11BBF6F7
C89C534054CD95C75832CE95F6A365E78ADF8450F5A6F346FD038951DBEAD723
DAA840E0D183D356A739B0EE96E5CBA142A9F61F90C6E4604EDB1A1987F24ED1
F7752E57D258513B1194C6CCAB82EF9ECF08B30264694172F9A75331B916E3B0
C506FE8FDFA6F544B4264BA6D59C71961E64CE675ABF475542648A4DFB65D7AD
4E0C08A5B355BFF7A0B588D61276F94706B29796358956C55E2AFF9E1DD9AC26
BFFE275C7B24275AAE2770913C95D583F3D0CB9806986A8ECAC7D4E624353575
E13D49DD5AF366220D28DC3CA12D0216F822CBAED2657A1913E3C0A21FC66714
3C47B8070D31E6FC60F8C7961BA96362CA771E3DB9DBA6C6B4A83F47864D1624
747054CC3E674581B8E88964F9AB5B38469000FBF31BAE9CE8703754A099D21B
332EE9982E862434D6CB5D80F69E0010B97E1A371ECA95C00CFEB7BC007EC513
9AE5F97CC20BFC1CCC32E8EE6EEC2E85D97BCFB18CDAFB031825A94036EE5A0D
74993713AB2FDC96FD1FD6FEF354D434F560BD28D2EFC5F1EED95633398B60B4
2A10D09EA4F965ECFE8DDB84EEADD52959480D929CBBA73E0C6F8C7DDDFF2043
A5062787517EA4372A5E959066CE29147D7B9D892099BC54870A23A5789C26CF
5AFC45AC771C052CF25114C7E42171C091446F1DB0DEC0A32ED259AF8D2CC281
25CAF20D193C806EBAA623C61C37176DE8455D07DB8103465408281EC36BC0DA
6288B860B6A245A193BC1C1E95DEC7CD476BBE52889CF79BBACA1EBDB49DDC59
C2CCD49D0606CCE8386E84D5B0804EDF9C6FBEB0593BDEB758BFDA810D03A2F6
162F82FE0EDCE29872B923A35D3A67B9E294FEAB91422B5A00E51053A145E468
51E77A1BEF91E8EA2859B0C2143680982ECFF57BD7D47576539CED329AAA92E1
A57C55DE7BC0710161190B5B9084064E42A5A182034F00D27A4450A639E482C9
24A873A404ACBBE4BE3A42BDF31AEBB9A4920D9E6E5F78C3FD71D75F442F2AD1
7C6451A79F4041BAF27C79B77B5836E63C7CA9BBF875EFEB0DD1FC27CD0D8729
B2E3D74EBAF8B07234CF384CD28091D0388E33BF561718FBC8D5747F07F456D9
4FF632DB66342979E8CF744F0A87353F22DB6C67E12DE0AA9B5CB2206868F3A6
9C33D04B4D7AFE1C4DE40BB707939D0F05AAC04DBC0E2D8B95AE1279F582C139
86D8D0302064C44333F759EEEE2757B16266E3A6B986552612384838E736ABB3
3492EE0CED4ED94CDDDF630BEF143560CE7FFCE1D91CD5EFC89CEB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600
(cs463_group09_final_report.dvi)
@start /Fa 136[55 37 42 23 32 32 2[42 42 60 23 2[23 42
42 23 37 42 37 42 42 9[69 2[46 1[51 1[51 3[46 2[28 4[60
55 51 51 12[42 42 42 42 2[21 46[{ TeXBase1Encoding ReEncodeFont }34
83.022 /NimbusRomNo9L-ReguItal rf /Fb 107[37 25[37 42
42 60 42 42 23 32 28 42 42 42 42 65 23 42 23 23 42 42
28 37 42 37 42 37 7[60 60 78 60 60 51 46 55 60 46 60
60 74 51 60 32 28 60 60 46 51 60 55 55 60 1[37 4[23 42
42 42 42 42 42 42 42 42 42 23 21 28 21 2[28 28 28 3[42
32[46 2[{ TeXBase1Encoding ReEncodeFont }73 83.022 /NimbusRomNo9L-Regu
rf /Fc 166[48 1[63 1[48 41 37 44 48 1[48 48 59 41 2[22
48 48 37 41 48 44 1[48 65[{ TeXBase1Encoding ReEncodeFont }19
66.4176 /NimbusRomNo9L-Regu rf /Fd 198[29 29 29 29 29
29 29 29 29 29 48[{ TeXBase1Encoding ReEncodeFont }10
58.1154 /NimbusRomNo9L-Regu rf /Fe 134[37 37 54 37 37
21 29 25 37 37 37 37 58 21 37 21 21 37 37 25 33 37 33
37 33 12[46 13[42 3[50 54 15[37 37 1[19 1[19 41[42 2[{
 TeXBase1Encoding ReEncodeFont }34 74.7198 /NimbusRomNo9L-Regu
rf /Ff 139[25 29 33 14[33 42 37 31[54 65[{
 TeXBase1Encoding ReEncodeFont }7 74.7198 /NimbusRomNo9L-Medi
rf /Fg 134[46 3[46 25 36 30 2[46 46 71 4[46 46 1[41 15[66
1[51 3[66 66 81 2[36 1[66 66 4[61 66 18[23 1[23 44[{
 TeXBase1Encoding ReEncodeFont }23 91.3242 /NimbusRomNo9L-Regu
rf /Fh 139[28 1[33 1[50 50 50 1[28 2[28 1[50 1[44 3[44
13[55 66 11[55 2[66 8[28 3[50 1[50 50 50 50 50 48[{
 TeXBase1Encoding ReEncodeFont }21 99.6264 /NimbusRomNo9L-Regu
rf /Fi 134[100 1[144 1[100 55 78 66 1[100 100 100 155
55 2[55 100 100 66 88 1[88 14[122 111 3[144 7[144 3[133
67[{ TeXBase1Encoding ReEncodeFont }22 199.253 /NimbusRomNo9L-Regu
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref package)/Author ()/Keywords () /DOCINFO pdfmark
end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158 -481
a
SDict begin H.S end
 -158 -481 a -158 -481 a
SDict begin H.R end
 -158 -481 a -158 -481 a
SDict begin [/View [/XYZ H.V]/Dest (page.) cvn /DEST pdfmark end
 -158
-481 a 0 TeXcolorgray Black 0 TeXcolorgray -150 -150
a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -150 -150 a -150 -150 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -150 -150 a -150 -150 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -150
-150 a -150 -150 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (section.1) cvn/Title (INTRODUCTION TO THE PROJECT)
/OUT pdfmark end
 -150 -150
a -150 -150 a
SDict begin [/Count -0/Dest (section.2) cvn/Title (Changes to the Requirements)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -1/Dest (section.3) cvn/Title (DESIGN DOCUMENT)
/OUT pdfmark end
 -150 -150 a -150
-150 a
SDict begin [/Count -0/Dest (subsection.3.1) cvn/Title (Discussion on Design Document)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -1/Dest (section.4) cvn/Title (TECHNOLOGY REVIEW)
/OUT pdfmark end
 -150 -150 a -150 -150
a
SDict begin [/Count -0/Dest (subsection.4.1) cvn/Title (Discussion on Tech Review)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (section.5) cvn/Title (BLOG POSTS) /OUT
pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (section.6) cvn/Title (PROJECT DOCUMENTATION)
/OUT pdfmark end
 -150
-150 a -150 -150 a
SDict begin [/Count -0/Dest (section.7) cvn/Title (How did you learn the new technology?)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -1/Dest (section.8) cvn/Title (What did you learn from all of this? \(Justin Bruntmyer\))
/OUT pdfmark end
 -150 -150
a -150 -150 a
SDict begin [/Count -0/Dest (subsection.8.1) cvn/Title (What Technical Information Did I Learn)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (section.9) cvn/Title (What did you learn from all of this? \(Megan Goossens\))
/OUT pdfmark end
 -150 -150 a -150
-150 a
SDict begin [/Count -0/Dest (section.10) cvn/Title (What did you learn from all of this? \(Hai Nguyen\))
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -4/Dest (section.11) cvn/Title (PROBLEMS ENCOUNTERED)
/OUT pdfmark end
 -150 -150 a -150 -150
a
SDict begin [/Count -0/Dest (subsection.11.1) cvn/Title (Problem 1)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsection.11.2) cvn/Title (Problem 2)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsection.11.3) cvn/Title (Problem 3)
/OUT pdfmark end
 -150
-150 a -150 -150 a
SDict begin [/Count -0/Dest (subsection.11.4) cvn/Title (Problem 4)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -150 -150
a -150 -150 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin H.S end
 -150 -150 a -150
-150 a
SDict begin 12 H.A end
 -150 -150 a -150 -150 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -150 -150 a -150 -150
a
SDict begin [ {Catalog} <</PageLabels<</Nums[0<</P()>>1<</S/D>>]>>>>
/PUT pdfmark end
 -150 -150 a -108 -14 a Fi(T)-16 b(ools)68 b(for)i(Supporting)f
(Community)g(Gro)-5 b(wth)69 b(in)h(Open)1673 218 y(Source)1260
451 y Fh(CS463:)35 b(Final)g(Report)g(Spring)f(2016)418
645 y Fg(Bruntmyer)d(J.)h(Author)l(,)f(OSU,)h(Goossens)d(M.)j(Author)l
(,)g(OSU,)f(Nguyen)f(H.)i(Author)l(,)g(OSU)1811 960 y
Ff(Abstract)p 0 TeXcolorgray 0 TeXcolorgray 141 1085
a Fe(F)o(or)25 b(the)i(past)f(six)h(months)g(our)g(group)g(has)g(been)g
(w)o(orking)h(on)f(a)f(project)h(that)f(is)g(creating)h(tools)f(that)h
(gi)n(v)o(es)f(users)h(the)g(ability)f(to)g(look)16 1168
y(for)h(open)h(source)g(community)g(leaders)g(that)e(are)h(hosting)h(e)
n(v)o(ents.)g(These)f(tools)g(will)f(allo)n(w)h(users)h(to)e(ha)o(v)o
(e)i(the)f(opportunity)h(to)f(\002nd)g(these)16 1251
y(e)n(v)o(ents)e(in)e(order)h(to)g(become)h(a)f(contrib)o(utor)g(to)g
(an)g(open)g(source)h(project.)f(This)f(is)h(done)g(in)g(the)g(form)g
(of)f(a)h(website)g(that)g(will)e(ha)o(v)o(e)i(features)16
1334 y(for)30 b(\002nding)g(certain)h(e)n(v)o(ents)f(dealing)h(with)f
(open)h(source)f(projects)h(so)f(that)g(it)f(can)i(be)f(easily)g
(accessible)h(by)f(people)h(with)f(a)g(passion)h(for)16
1417 y(w)o(anting)j(to)e(contrib)o(ute)i(to)e(projects.)h(Throughout)i
(this)d(document,)i(we)f(look)h(at)e(what)h(this)g(team)g(has)g
(accomplished)h(for)f(each)h(of)f(the)16 1500 y(requirements)d(that)f
(ha)o(v)o(e)g(been)h(laid)f(out,)f(discussing)j(problems)e(that)g(ha)o
(v)o(e)g(halted)h(our)f(progression)h(through)h(the)e(project,)g(and)g
(ho)n(w)h(we)16 1583 y(changed)f(our)f(timeline.)f(Also)g(included)h
(are)g(important)g(images)f(of)h(the)f(user)h(interf)o(ace)g(we)f(ha)o
(v)o(e)g(decided)i(to)e(use,)h(along)g(with)f(pieces)h(of)16
1666 y(code)i(that)e(we)h(ha)o(v)o(e)g(completed.)g(By)g(the)g(end)h
(of)e(this)h(document,)h(you)f(will)f(get)h(a)g(complete)g(picture)g
(of)g(ho)n(w)g(we)g(reached)h(our)f(v)o(ersion)16 1749
y(1.0)e(release.)p 0 TeXcolorgray 0 TeXcolorgray eop
end
%%Page: 1 2
TeXDict begin 1 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158
-481 a
SDict begin H.S end
 -158 -481 a -158 -481 a
SDict begin H.R end
 -158 -481 a -158 -481
a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -158 -481 a 0 TeXcolorgray 4021 -373 a Fd(1)p 0 TeXcolorgray
-150 -150 a
SDict begin H.S end
 -150 -150 a -150 -150 a
SDict begin 12 H.A end
 -150 -150 a -150
-150 a
SDict begin [/View [/XYZ H.V]/Dest (section.1) cvn /DEST pdfmark end
 -150 -150 a 1201 -50 a Fb(I)t(.)45 b(I)t(N)t(T)t(R)q(O)t(D)t(U)t
(C)t(T)t(I)t(O)t(N)26 b(T)s(O)e(T)t(H)t(E)h(P)t(R)q(O)t(J)t(E)t(C)t(T)
-67 75 y(The)39 b(Community)f(Dri)n(v)o(en)h(De)n(v)o(elopment)e
(project)h(is)j(sponsored)d(by)h(the)g(Apache)g(Softw)o(are)g(F)o
(oundation)e(under)h(Ross)j(Gardler)m(,)-150 175 y(Director)29
b(and)f(President)h(of)h(the)f(compan)o(y)-5 b(.)26 b(The)j(project)g
(w)o(as)h(designed)e(and)h(prototyped)e(by)i(Gardler)f(before)g(being)h
(proposed)e(to)j(the)-150 275 y(senior)f(softw)o(are)h(project)f(class)
h(for)g(Ore)o(gon)e(State)i(Uni)n(v)o(ersity)-5 b(.)28
b(De)n(v)o(elopment)f(for)j(the)g(project)e(hopes)i(to)g(achie)n(v)o(e)
e(more)h(in)m(v)n(olv)o(ement)-150 374 y(in)i(terms)g(of)g(helping)f(b)
n(uilding)g(upon)g(the)h(Open)f(Source)g(Community)g(and)g(helping)g
(it)i(gro)n(w)e(and)h(gain)f(more)g(traf)n(\002c.)h(The)g(prototype)
-150 474 y(w)o(as)i(re)o(gularly)d(used)i(by)g(Gardler)f(and)h(man)o(y)
f(of)h(the)g(f)o(aculty)g(from)f(Apache)g(and)h(is)h(continued)d(to)j
(gain)e(interest)h(to)h(the)f(public.)f(The)-150 574
y(importance)f(of)h(de)n(v)o(elopment)e(of)i(the)g(project)g(will)h
(promote)e(more)h(gro)n(wth)f(and)h(allo)n(w)h(more)f(tools)g(for)g
(users)h(in)f(the)h(community)d(to)-150 673 y(\002nd)c(and)g(locate)g
(more)g(e)n(v)o(ents)g(and)g(get)g(more)g(in)m(v)n(olv)o(ed)e(in)j
(open)e(source)h(community)f(groups)g(and)g(projects.)h(The)g(students)
g(assigned)g(to)-150 773 y(w)o(ork)f(on)g(this)h(project)e(were)i
(Justin)f(Bruntmyer)m(,)f(Me)o(gan)f(Goossens,)i(and)g(Hai)h(Nguyen.)e
(Each)h(member)f(took)g(upon)g(equal)h(and)g(separate)-150
872 y(roles)31 b(for)g(the)g(project.)f(No)h(speci\002c)h(roles)f(were)
g(assigned)g(as)h(each)f(member)f(took)g(part)h(in)g(doing)f(part)h(of)
g(the)g(w)o(ork)g(for)g(e)n(v)o(ery)e(task.)-150 972
y(Ross)f(Gardler)e(pro)o(vided)e(the)j(initial)g(prototype)d(while)j
(the)g(project)f(w)o(as)h(impro)o(v)o(ed)d(and)j(implemented)e(with)i
(the)f(requested)g(features)g(as)-150 1072 y(the)j(term)f(progressed.)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 2 3
TeXDict begin 2 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158
-481 a
SDict begin H.S end
 -158 -481 a -158 -481 a
SDict begin H.R end
 -158 -481 a -158 -481
a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 -158 -481 a 0 TeXcolorgray 4021 -373 a Fd(2)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 3 4
TeXDict begin 3 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158
-481 a
SDict begin H.S end
 -158 -481 a -158 -481 a
SDict begin H.R end
 -158 -481 a -158 -481
a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 -158 -481 a 0 TeXcolorgray 4021 -373 a Fd(3)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 4 5
TeXDict begin 4 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158
-481 a
SDict begin H.S end
 -158 -481 a -158 -481 a
SDict begin H.R end
 -158 -481 a -158 -481
a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 -158 -481 a 0 TeXcolorgray 4021 -373 a Fd(4)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 5 6
TeXDict begin 5 5 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158
-481 a
SDict begin H.S end
 -158 -481 a -158 -481 a
SDict begin H.R end
 -158 -481 a -158 -481
a
SDict begin [/View [/XYZ H.V]/Dest (page.5) cvn /DEST pdfmark end
 -158 -481 a 0 TeXcolorgray 4021 -373 a Fd(5)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 6 7
TeXDict begin 6 6 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158
-481 a
SDict begin H.S end
 -158 -481 a -158 -481 a
SDict begin H.R end
 -158 -481 a -158 -481
a
SDict begin [/View [/XYZ H.V]/Dest (page.6) cvn /DEST pdfmark end
 -158 -481 a 0 TeXcolorgray 4021 -373 a Fd(6)p 0 TeXcolorgray
-150 -150 a
SDict begin H.S end
 -150 -150 a -150 -150 a
SDict begin 12 H.A end
 -150 -150 a -150
-150 a
SDict begin [/View [/XYZ H.V]/Dest (section.2) cvn /DEST pdfmark end
 -150 -150 a 1274 -50 a Fb(I)t(I)t(.)45 b(C)t Fc(H)t(A)t(N)t(G)t
(E)t(S)26 b(T)s(O)e(T)t(H)t(E)g Fb(R)t Fc(E)t(Q)s(U)t(I)t(R)t(E)t(M)t
(E)t(N)t(T)t(S)-67 75 y Fb(After)33 b(continuous)f(w)o(ork)g(on)h(this)
h(project,)f(the)g(perspecti)n(v)o(e)f(on)h(what)g(this)h(community)e
(de)n(v)o(elopment)e(tool)j(w)o(ants)h(to)g(accomplish)-150
175 y(became)f(clear)-5 b(.)33 b(After)g(taking)g(more)g(time)h(to)f
(read)g(and)g(understand)f(the)h(code)g(that)h(w)o(as)g(pre)n(viously)d
(written)j(for)f(the)g(prototype,)e(we)-150 275 y(can)d(see)h(clearly)f
(ho)n(w)g(the)g(data)g(is)i(or)o(ganized)25 b(and)j(connected)e(using)i
(Django)f(and)h(its)h(tools.)g(First)g(and)f(foremost,)e(the)j(purpose)
d(of)j(the)-150 374 y(community)22 b(de)n(v)o(elopment)f(tool)j
(remains)f(the)h(same.)g(The)g(purpose)e(is)j(to)f(gather)f
(information)e(from)i(meetup.com)f(which)h(is)i(the)f(website)-150
474 y(we)33 b(are)g(pulling)e(information)f(about)i(e)n(v)o(ents)g(and)
g(people)g(from.)f(Ne)o(xt)i(we)g(parse)f(that)h(information)d(into)j
(a)g(list)g(of)g(upcoming)d(e)n(v)o(ents)-150 574 y(related)g(to)h
(Apache)f(and)g(open)f(source)h(projects)g(so)h(that)g(de)n(v)o
(elopers)e(in)h(the)h(open)f(source)g(community)e(ha)n(v)o(e)i(an)h
(easy)f(w)o(ay)h(to)g(access)-150 673 y(an)h(en)m(vironment)d(where)j
(the)o(y)f(can)h(hope)f(to)h(participate)g(in)g(those)g(e)n(v)o(ents.)f
(The)h(ultimate)g(goal)f(of)h(this)h(project)e(is)i(to)f(create)g(a)h
(set)g(of)-150 773 y(tools)c(that)f(eager)g(de)n(v)o(elopers)e(can)j
(use)f(to)h(\002nd)f(e)n(v)o(ents,)g(vie)n(w)g(community)f(leader)g
(pro\002les,)h(and)g(get)h(in)m(v)n(olv)o(ed.)-150 1047
y
SDict begin H.S end
 -150 1047 a -150 1047 a
SDict begin 0 H.A end
 -150 1047 a -150 1047 a
SDict begin [/View [/XYZ H.V]/Dest (table.1) cvn /DEST pdfmark end
 -150
1047 a -147 1050 4195 4 v -147 1050 V -147 1151 4 101
v -80 1120 a Fb(REQ#)p 192 1151 V 729 w(Requirement)p
1948 1151 V 1052 w(What)g(Happened)e(T)-7 b(o)28 b(It)p
3469 1151 V 498 w(Comments)p 4044 1151 V -147 1154 4195
4 v -147 1154 V -147 5039 4 3886 v 3 3117 a(1)p 192 5039
V 273 3067 a(Fix)h(the)f(\224People\224)g(page)g(where)g(the)g(list)i
(of)e(people)676 3166 y(are)h(sho)n(wn)f(from)f(groups)p
1948 5039 V 2056 1224 a(The)h(People)g(page)g(currently)f(tak)o(es)i
(all)g(of)2011 1323 y(the)g(people)e(in)i(the)f(database)g(and)g(lists)
i(them)2008 1423 y(onto)d(the)i(page.)e(Normally)-5 b(,)27
b(if)i(the)f(prototype)2080 1522 y(is)i(hosted)e(on)g(a)h(local)f
(machine)f(and)h(the)2089 1622 y(database)g(is)i(relati)n(v)o(ely)d
(small,)i(then)f(the)2032 1722 y(page)g(loads)g(\002ne)h(in)f(a)h
(minimal)f(amount)f(of)2061 1821 y(time.)h(The)g(issue)h(is)h(nested)e
(in)h(the)f(actual)2001 1921 y(hosted)g(site)h(by)f(Apache)f(where)h
(hundreds)e(of)2045 2021 y(thousands)h(people)g(are)i(imported)e(into)h
(the)2028 2120 y(database)g(daily)g(and)g(dramatically)f(slo)n(wing)
2013 2220 y(do)n(wn)g(the)i(loading)e(time)i(of)f(the)g(page.)g(W)m
(ith)2001 2319 y(our)f(current)e(progression)g(of)i(the)g(project,)f
(we)2039 2419 y(ha)n(v)o(e)i(not)g(made)g(signi\002cant)g(progress)g
(into)2027 2519 y(impro)o(ving)e(the)j(loading)e(time)i(of)f(the)g
(page.)2047 2618 y(W)-7 b(e)30 b(use)f(our)e(o)n(wn)h(local)h(host)f
(to)h(import)e(a)2025 2718 y(small)i(amount)e(of)h(members)g(at)h(a)g
(time)f(and)2035 2818 y(that)h(requirement)d(is)j(set)h(to)e(be)h(w)o
(ork)o(ed)e(on)2077 2917 y(shortly)g(for)h(Beta)h(implementation.)d
(The)2196 3017 y(guideline)h(for)h(w)o(orking)f(to)n(w)o(ards)2089
3117 y(accomplishing)g(this)i(requirement)d(is)j(to)2050
3216 y(limit)g(the)g(amount)e(of)h(people)g(loaded)f(at)i(a)2053
3316 y(time)f(onto)g(the)g(page.)g(F)o(or)g(Beta,)h(we)g(ha)n(v)o(e)
2038 3415 y(rearranged)d(where)i(the)h(table)f(is)h(generated)2113
3515 y(for)f(the)h(people)e(page)h(in)h(the)f(function)2011
3615 y(within)g(vie)n(ws.p)o(y)-5 b(.)27 b(This)h(change)g
(speci\002cally)2009 3714 y(w)o(as)h(introduced)e(because)g(a)i(b)n(ug)
f(w)o(as)i(found)2029 3814 y(where)e(when)g(the)h(table)f(is)h
(generated,)e(then)2030 3914 y(if)h(the)h(amount)e(of)h(people)g(were)g
(too)g(man)o(y)-5 b(,)2007 4013 y(then)28 b(the)g(table)h(w)o(ould)e
(crash)i(and)f(not)g(b)n(uild.)2053 4113 y(W)m(ith)h(the)g
(rearrangement,)c(no)n(w)j(the)g(table)2013 4212 y(does)g(not)g(break)g
(through)e(a)j(lar)o(ge)e(b)n(uild)i(and)2035 4312 y(no)n(w)f(tends)g
(to)h(load)f(f)o(aster)-5 b(.)29 b(Unfortunately)-5 b(,)2083
4412 y(the)29 b(implementation)d(of)i(the)h(\002x)g(for)e(the)2012
4511 y(People)h(page)g(is)h(local.)f(W)-7 b(e)30 b(ha)n(v)o(e)e(yet)g
(to)h(test)2001 4611 y(it)g(on)f(the)h(host)f(that)g(Apache)g(is)h
(using)f(to)g(run)2038 4711 y(the)h(prototype)d(currently)-5
b(.)26 b(W)-7 b(e)30 b(predict)d(that)2046 4810 y(the)h(\002x)h(will)g
(w)o(ork)f(b)n(ut)g(it)i(will)f(need)f(to)g(be)2047 4910
y(appro)o(v)o(ed)e(and)i(patched)f(into)h(the)h(li)n(v)o(e)f(site)2439
5009 y(for)f(clari\002cation.)p 3469 5039 V 3686 3116
a(blah)p 4044 5039 V -147 5043 4195 4 v 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 7 8
TeXDict begin 7 7 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158
-481 a
SDict begin H.S end
 -158 -481 a -158 -481 a
SDict begin H.R end
 -158 -481 a -158 -481
a
SDict begin [/View [/XYZ H.V]/Dest (page.7) cvn /DEST pdfmark end
 -158 -481 a 0 TeXcolorgray 4021 -373 a Fd(7)p 0 TeXcolorgray
-147 -50 4195 4 v -147 3636 4 3687 v 3 1813 a Fb(2)p
192 3636 V 460 1812 a(T)-7 b(weet)29 b(at)g(a)g(person)e(listed)i(in)g
(database)p 1948 3636 V 2065 19 a(Each)f(person)f(who)h(is)i(imported)d
(into)h(the)2009 119 y(application)f(is)i(generated)e(their)h(o)n(wn)g
(pro\002le)2095 219 y(page)g(based)g(of)n(f)g(of)g(their)g(Meetups)g
(ID.)2087 318 y(Information)e(from)h(Meetups)h(about)g(the)2102
418 y(persons)g(pro\002le)f(is)j(also)f(parsed)e(in)i(the)2088
517 y(community)e(de)n(v)o(elopment)e(tool.)j(Those)2073
617 y(pro\002les)g(include)g(displaying)f(the)h(twitter)2031
717 y(handle)g(of)g(the)g(person.)g(This)g(w)o(as)i(done)d(by)2007
816 y(changing)g(the)h(Meetup)g(API)h(request)f(so)g(that)2010
916 y(we)h(could)e(get)i(the)f(correct)g(information)e(and)2139
1016 y(then)i(store)h(that)f(information)f(in)h(our)2115
1115 y(database.)f(This)i(can)f(be)h(seen)f(in)h(code)2054
1215 y(snippet)f(1)h(located)f(belo)n(w)g(with)g(the)h(URL)2036
1315 y(sho)n(wn)f(along)f(with)i(the)f('if)5 b(')28 b(statements)h(to)
2012 1414 y(locate)f(the)h(twitter)f(handle.)g(This)g(allo)n(ws)h(the)
2022 1514 y(user)f(to)h(get)g(in)f(contact)g(with)h(the)f(person)g(in)
2046 1613 y(a)h(pro\002le.)e(Abo)o(v)o(e)g(the)i(twitter)g(handle)e(is)
i(a)2007 1713 y(b)n(utton)e(that)i(has)g(the)f(T)-7 b(witter)29
b(symbol)f(which)2009 1813 y(allo)n(ws)h(the)g(user)f(to)h(click)f(and)
g(send)g(a)h(tweet)2145 1912 y(at)g(the)g(person)e(via)i(Hoot-suite.)e
(The)2009 2012 y(hoot-suite)g(app)h(is)h(gi)n(v)o(en)f(the)g(twitter)h
(handle)2029 2112 y(of)g(the)f(person)g(the)g(user)g(w)o(ants)h(to)g
(tweet)g(at)2013 2211 y(and)f(the)g(URL)h(of)g(the)f(persons)g(page)g
(on)g(our)2021 2311 y(application)f(for)h(reference.)e(The)i(user)h
(signs)2080 2410 y(in)g(to)g(compose)e(the)h(tweet)h(and)f(sends)h(it)
2066 2510 y(under)e(their)h(T)-7 b(witter)29 b(account.)e(The)h(code)
2123 2610 y(snippet)g(2)h(located)e(belo)n(w)h(sho)n(ws)h(the)2054
2709 y(HTML)f(encoding)f(of)h(the)h(b)n(utton)e(used)h(to)2099
2809 y(create)g(the)g(Hootsuite)g(connection)f(and)2029
2909 y(sho)n(ws)h(the)h(retrie)n(v)n(al)e(of)i(the)f(twitter)h(handle)
2027 3008 y(form)f(the)g(database)g(with)h('person.service'.)2109
3108 y(Not)g(all)g(users)f(ha)n(v)o(e)g(a)h(T)-7 b(witter)29
b(handle)2048 3207 y(re)o(gistered)e(with)i(Meetups)f(thus)g(the)h
(tweet)2019 3307 y(b)n(utton)e(does)h(not)h(ha)n(v)o(e)e(an)o(y)h(use.)
h(T)-7 b(o)28 b(handle)2001 3407 y(this)h(case)g(the)f(tweet)h(at)g(b)n
(utton)e(only)g(appears)2023 3506 y(on)h(pro\002les)g(of)g(imported)f
(people)g(that)i(ha)n(v)o(e)2245 3606 y(a)g(re)o(gistered)e(T)-7
b(witter)29 b(handle.)p 3469 3636 V 3686 1812 a(blah)p
4044 3636 V -147 3639 4195 4 v 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 8 9
TeXDict begin 8 8 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158
-481 a
SDict begin H.S end
 -158 -481 a -158 -481 a
SDict begin H.R end
 -158 -481 a -158 -481
a
SDict begin [/View [/XYZ H.V]/Dest (page.8) cvn /DEST pdfmark end
 -158 -481 a 0 TeXcolorgray 4021 -373 a Fd(8)p 0 TeXcolorgray
-147 -50 4195 4 v -147 2739 4 2790 v 3 1364 a Fb(3)p
192 2739 V 274 1315 a(Add)28 b(user)g(accounts)g(to)g(the)h
(application)e(and)h(track)495 1414 y(when)g(a)h(user)f(has)h(tweeted)f
(an)h(e)n(v)o(ent)p 1948 2739 V 2033 19 a(The)f(purpose)f(of)h(adding)f
(user)h(accounts)g(to)2073 119 y(the)h(applications)e(is)j(to)e(be)h
(able)f(to)h(track)2088 219 y(when)f(users)h(tweeting)f(about)f(e)n(v)o
(ents)h(or)2103 318 y(people.)f(W)m(ith)i(the)f(completion)f(of)h(this)
2100 418 y(requirement,)e(the)i(account)g(creation)f(is)2009
517 y(w)o(orking)g(along)h(with)g(being)g(able)g(to)h(sign)f(in)2110
617 y(successfully)g(with)h(a)g(con\002rmation)d(of)2100
717 y(signing)i(in)g(by)g(displaying)f(a)i(welcome)2014
816 y(message)f(along)g(with)g(the)h(user')-5 b(s)29
b(username.)2042 916 y(There)f(is)h(also)g(a)g(login)f(and)f(logout)h
(b)n(utton)2071 1016 y(located)g(in)h(the)f(top)g(right)g(section)g(of)
h(the)2008 1115 y(website)f(on)g(all)h(pages)g(allo)n(wing)e(the)i
(user)f(to)2012 1215 y(login)g(or)g(logout)f(at)i(an)o(ytime.)e(Ev)o
(erything)f(is)2103 1315 y(also)j(back)o(ended)d(with)j(features)f(of)g
(the)2037 1414 y(website)h(only)f(e)o(xisting)f(if)i(the)g(user)f(has)h
(an)2095 1514 y(authorized)e(account.)g(This)h(means)h(that)2055
1613 y(action)f(functions)f(within)h(the)h(application)2130
1713 y(which)f(include)g(importing)e(meetups,)2048 1813
y(importing)h(members,)g(marking)g(e)n(v)o(ents)h(as)2058
1912 y(not)g(applicable,)f(and)h(marking)e(groups)i(as)2014
2012 y(not)g(applicable)g(to)g(be)h(behind)e(being)g(signed)2035
2112 y(in.)h(This)h(means)f(if)h(you)e(are)i(not)f(logged)f(in)2054
2211 y(with)h(the)h(authorized)d(account,)h(you)h(can')o(t)2097
2311 y(perform)e(these)j(actions.)f(Note)g(that)h(the)2053
2410 y(accounts)f(created)f(are)i(allo)n(wed)f(access)h(to)2019
2510 y(these)g(features,)f(b)n(ut)g(do)g(not)g(ha)n(v)o(e)g(access)h
(to)2051 2610 y(the)g(administrati)n(v)o(e)d(page)i(that)h(deals)g
(with)2355 2709 y(the)f(Django)g(database.)p 3469 2739
V 3686 1364 a(blah)p 4044 2739 V -147 2742 4195 4 v -147
2742 V -147 4635 4 1893 v 3 3709 a(4)p 192 4635 V 285
3659 a(List)h(tweets)g(about)f(e)n(v)o(ents)f(and/or)h(people)f(via)h
(the)1012 3759 y(app)p 1948 4635 V 2094 2812 a(W)-7 b(e)29
b(were)g(unable)e(to)i(track)f(the)g(precise)2058 2912
y(tweets)i(made)d(from)h(our)g(application,)e(b)n(ut)2013
3011 y(we)j(ha)n(v)o(e)f(found)e(an)j(alternati)n(v)o(e)e(that)h
(mostly)2001 3111 y(w)o(orks.)g(As)h(sho)n(wn)f(in)h(the)f(code)g
(snippet,)f(the)2027 3211 y(website)i(mak)o(es)f(a)h(call)g(to)g(T)-7
b(witter')i(s)29 b(search)2022 3310 y(API,)g(requesting)e(all)i(tweets)
g(that)g(contain)e(a)2065 3410 y(certain)h(hashtag)g(as)h(well)g(as)g
(the)g(hashtag)2036 3510 y(#Meetup.)e(The)h(hashtags)g(are)h(the)f
(same)h(as)2152 3609 y(the)f(ones)h(used)f(to)h(get)f(e)n(v)o(ents)g
(from)2052 3709 y(meetup.com.)e(Once)i(it)i(has)e(the)h(tweets,)g(it)
2115 3808 y(uses)g(the)g(id)g(from)e(each)h(one)g(to)h(mak)o(e)2049
3908 y(another)e(call)i(to)g(T)-7 b(witter')i(s)29 b(OEmbed)e(API,)2020
4008 y(which)h(sends)h(back)f(HTML)g(that)h(is)g(used)f(in)2015
4107 y(the)g(page')-5 b(s)29 b(template)f(to)g(present)g(embedded)2078
4207 y(tweets)h(to)g(users.)f(This)h(still)h(pulls)e(a)h(fe)n(w)2108
4307 y(tweets)h(that)e(are)h(unrelated,)d(b)n(ut)j(bit)g(of)2029
4406 y(\002ltering)f(w)o(ould)g(w)o(ork.)f(Unfortunately)f(this)2081
4506 y(w)o(ould)i(be)h(dif)n(\002cult,)e(and)h(is)i(outside)d(the)2356
4605 y(scope)i(of)f(our)g(project.)p 3469 4635 V 3686
3709 a(blah)p 4044 4635 V -147 4639 4195 4 v 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 9 10
TeXDict begin 9 9 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158
-481 a
SDict begin H.S end
 -158 -481 a -158 -481 a
SDict begin H.R end
 -158 -481 a -158 -481
a
SDict begin [/View [/XYZ H.V]/Dest (page.9) cvn /DEST pdfmark end
 -158 -481 a 0 TeXcolorgray 4021 -373 a Fd(9)p 0 TeXcolorgray
-147 -50 4195 4 v -147 1643 4 1694 v 3 816 a Fb(5)p 192
1643 V 320 767 a(List)29 b(tweets)g(about)f(e)n(v)o(ents)g(and/or)f
(people)g(from)615 866 y(twitter)m(,)i(b)n(ut)f(not)g(via)h(the)f(app)p
1948 1643 V 2027 19 a(The)g(website)h(no)n(w)f(has)h(a)g(tweet)g
(parser)-5 b(.)28 b(As)2001 119 y(sho)n(wn)g(in)h(the)f(code)g
(snippet,)f(it)j(sends)e(a)h(call)2061 219 y(to)g(T)-7
b(witter')i(s)29 b(search)f(API,)g(requesting)f(all)2125
318 y(tweets)i(with)f(a)h(certain)f(hashtag.)g(The)2041
418 y(hashtags)g(are)h(the)f(same)h(as)g(the)g(ones)f(used)2030
517 y(to)g(get)h(e)n(v)o(ents)f(from)f(meetup.com.)f(Once)i(it)2037
617 y(has)h(the)f(tweets,)h(it)g(uses)g(the)g(id)g(from)e(each)2078
717 y(one)h(to)h(mak)o(e)f(another)f(call)i(to)f(T)-7
b(witter')i(s)2023 816 y(OEmbed)27 b(API,)i(which)f(sends)g(back)g
(HTML)2078 916 y(that)h(is)g(used)f(in)h(the)f(page')-5
b(s)29 b(template)f(to)2048 1016 y(present)g(embedded)f(tweets)i(to)f
(users.)h(The)2124 1115 y(search)f(results)h(currently)e(contain)g(all)
2027 1215 y(instances)h(of)h(the)f(hashtag)g(requested,)f(e)n(v)o(en)
2022 1315 y(when)h(the)o(y)g(are)g(not)g(rele)n(v)n(ant)g(to)g(an)o(y)g
(e)n(v)o(ent,)2047 1414 y(or)g(e)n(v)o(en)g(open)f(source.)h(The)g
(search)g(needs)2001 1514 y(re\002nement,)d(ho)n(we)n(v)o(er)m(,)f
(this)j(will)g(be)f(dif)n(\002cult,)2001 1613 y(and)i(is)i(not)e
(within)g(the)h(scope)f(of)g(the)g(project)p 3469 1643
V 3686 816 a(blah)p 4044 1643 V -147 1647 4195 4 v -147
1647 V -147 3141 4 1495 v 3 2414 a(6)p 192 3141 V 342
w(Export)f(a)i(list)h(of)e(people)f(with)i(information)p
1948 3141 V 2084 1716 a(When)f(taking)g(on)g(this)h(requirement)d(we)
2075 1816 y(quickly)h(realized)h(that)g(the)h(Meetup)f(API)2036
1916 y(w)o(ould)g(not)g(pro)o(vide)e(email)j(address)f(for)g(its)2001
2015 y(users)g(which)f(w)o(as)i(understandable.)24 b(W)-7
b(e)29 b(then)2030 2115 y(look)o(ed)e(at)i(what)f(other)g(information)e
(w)o(ould)2007 2214 y(be)j(useful)f(to)g(e)o(xtract)g(about)g(the)g
(people)f(that)2020 2314 y(were)h(loaded)g(into)g(the)h(database.)e
(This)i(lead)2041 2414 y(us)g(to)g(e)o(xport)e(information)f(such)i(as)
h(name,)2070 2513 y(twitter)g(handle,)e(bio,)h(Meetup)g(ID,)g(URL,)2045
2613 y(country)-5 b(,)26 b(state,)j(and)e(city)-5 b(.)28
b(The)h(e)o(xport)e(can)2043 2713 y(be)i(e)o(x)o(ecuted)d(by)i
(clicking)g(on)g(the)g('Export)2009 2812 y(Info')f(b)n(utton)h(located)
g(in)g(the)h(top)f(left)h(of)f(the)2001 2912 y(people)f(page)g(and)h
(creates)g(a)g(\002le)h(in)f(a)g(XLSX)2033 3011 y(format)f(which)h(can)
g(be)h(directly)f(opened)e(or)2607 3111 y(sa)n(v)o(ed.)p
3469 3141 V 3686 2414 a(blah)p 4044 3141 V -147 3144
4195 4 v -147 3144 V -147 4639 4 1495 v 3 3911 a(7)p
192 4639 V 306 3862 a(Impro)o(v)o(e)g(hashtag)i(searching)f(of)h
(application)f(for)533 3961 y(better)h(results)h(on)f(rele)n(v)n(ant)g
(e)n(v)o(ents)p 1948 4639 V 2021 3214 a(The)g(solution)g(to)g(this)h
(issue)g(w)o(as)h(to)e(change)2034 3314 y(one)f(w)o(ord)h(in)h(the)f
(call)h(to)g(the)g(meetup.com)2012 3413 y(API.)f(In)h(the)f(API)h
(there)f(are)g(man)o(y)g(dif)n(ferent)2001 3513 y(restrictions)f(you)f
(can)g(use)h(to)g(request)f(e)n(v)o(ents.)2011 3613 y(T)-7
b(w)o(o)29 b(of)f(them)g(come)g(into)g(play)g(here:)g(\224te)o(xt\224)
2089 3712 y(and)g(\224topic.)-6 b(\224)28 b(The)g(te)o(xt)g(query)f
(searches)2029 3812 y(through)f(the)i(content)g(of)g(the)h(e)n(v)o
(ents,)e(while)2001 3911 y(the)h(topic)f(query)f(looks)g(at)i(the)g
(topics)f(related)2080 4011 y(to)i(the)g(group.)d(The)i(original)g
(query)f(w)o(as)2003 4111 y(looking)g(at)i(te)o(xt,)f(which)g(resulted)
g(in)g(a)h(lot)g(of)2016 4210 y(unrelated)e(e)n(v)o(ents.)g(The)i
(query)e(w)o(as)i(\002x)o(ed)f(to)2006 4310 y(use)g(\224topic,)-6
b(\224)28 b(which)g(has)h(reduced)e(unw)o(anted)2149
4410 y(e)n(v)o(ents)g(signi\002cantly)-5 b(.)27 b(A)i(thourough)2027
4509 y(e)o(xamination)d(of)j(e)n(v)o(ents)e(imported)g(resulted)2158
4609 y(in)i(no)f(unrelated)f(e)n(v)o(ents)h(pulled)g(in.)p
3469 4639 V 3686 3911 a(blah)p 4044 4639 V -147 4642
4195 4 v 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 10 11
TeXDict begin 10 10 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158
-481 a
SDict begin H.S end
 -158 -481 a -158 -481 a
SDict begin H.R end
 -158 -481 a -158 -481
a
SDict begin [/View [/XYZ H.V]/Dest (page.10) cvn /DEST pdfmark end
 -158 -481 a 0 TeXcolorgray 3992 -373 a Fd(10)p 0 TeXcolorgray
-147 -50 4195 4 v -147 4333 4 4384 v 3 2161 a Fb(8)p
192 4333 V 268 2112 a(Implement)27 b(a)i(system)g(of)f(\002nding)f(e)n
(v)o(ents)h(nearby)f(a)318 2211 y(location)g(entered)g(or)i(within)f
(radius)g(of)g(the)h(user)p 1948 4333 V 2105 19 a(This)g(tool)f
(creates)h(a)f(list)i(of)e(all)h(e)n(v)o(ents)2119 119
y(parsed)f(through)e(the)j(application)e(and)2011 219
y(displays)h(a)h(mark)o(er)f(for)f(each)i(e)n(v)o(en)e(onto)h(the)2004
318 y(Google)g(Map)g(displayed)f(to)i(the)f(right)g(of)h(the)2048
418 y(lists)h(of)e(e)n(v)o(ents.)g(A)h(user)f(can)g(search)h(for)e(a)
2009 517 y(speci\002c)i(e)n(v)o(ent)e(by)h(looking)f(through)f(the)j
(list)2090 617 y(and)f(then)g(seeing)g(where)g(this)h(is)g(on)f(the)
2094 717 y(map.)g(This)g(feature)g(also)h(asks)g(the)f(web)2029
816 y(bro)n(wser)g(of)g(the)g(user)h(for)f(the)g(geo-location)2066
916 y(of)g(the)h(user)f(in)h(order)e(to)i(place)f(a)h(special)2050
1016 y(mark)o(er)f(on)g(the)g(map)g(sho)n(wing)g(where)f(the)2082
1115 y(user)h(is)i(in)f(reference)d(to)j(the)g(rest)f(of)h(the)2014
1215 y(mark)o(ers.)e(The)h(user)h(can)f(decide)g(weather)f(or)2019
1315 y(not)h(to)h(accept)f(gi)n(ving)f(the)i(their)f(location)g(to)2067
1414 y(the)g(application.)f(The)h(map)g(is)i(generated)2112
1514 y(through)c(Google)i(Maps)g(by)g(using)g(the)2062
1613 y(Google)f(Map)i(API)f(calls.)h(This)g(map)f(w)o(as)2025
1713 y(implemented)f(with)h(a)h(search)f(bar)h(allo)n(wing)2022
1813 y(the)g(user)f(to)h(search)f(for)g(a)h(location)e(and)h(see)2067
1912 y(what)h(e)n(v)o(ents)e(are)i(in)g(that)f(location.)f(W)m(ith)2134
2012 y(each)h(search)g(the)h(map)f(jumps)g(to)h(the)2001
2112 y(searched)e(location)f(and)g(is)i(gi)n(v)o(en)e(a)i(200)e(mile)
2075 2211 y(radius)i(circle)g(to)h(sho)n(w)f(what)g(e)n(v)o(ents)g(are)
2019 2311 y(within)g(200)f(miles)i(of)g(the)f(user)-5
b(.)29 b(In)f(order)f(to)2001 2410 y(get)i(the)f(mark)o(ers)f(of)h
(each)g(e)n(v)o(ent)f(to)h(sho)n(w)g(up)2018 2510 y(on)g(the)h(map)f
(the)g(latitude)g(and)g(longitude)f(of)2108 2610 y(each)h(e)n(v)o(ent)g
(needed)f(to)i(be)f(stored)g(and)2001 2709 y(accessed)g(by)e(the)h
(map.)g(This)g(w)o(as)h(done)e(by)h(a)2101 2809 y(Meetups)h(API)g(call)
h(as)h(sho)n(wn)d(in)i(code)2009 2909 y(snippet)f(3.)h(Once)f(the)g
(API)h(call)g(is)h(made)d(the)2086 3008 y(json)h(object)g(is)i
(returned)c(and)i(parsed)g(to)2001 3108 y(obtain)g(information)d(on)j
(the)g(e)n(v)o(ent)f(including)2037 3207 y(name,)g(longitude,)g(and)h
(latitude.)g(Once)g(the)2004 3307 y(information)e(is)k(stored)e(it)h
(is)g(accessed)g(in)g(the)2068 3407 y(Ja)n(v)n(aScript)f(for)g(the)g
(Google)g(Map)g(which)2078 3506 y(can)h(be)f(seen)h(in)f(code)g
(snippet)g(4)h(belo)n(w)-5 b(.)2024 3606 y(This)29 b(is)g(done)f(by)g
(looping)f(though)f(a)j(list)h(of)2051 3706 y(e)n(v)o(ents)e(and)g
(gather)f(the)i(name,)e(longitude,)2023 3805 y(and)h(latitudes)h(in)f
(order)f(for)h(the)h(mark)o(ers)e(to)2108 3905 y(display)-5
b(.)28 b(When)g(a)h(user)f(ho)o(v)o(ers)f(o)o(v)o(er)g(a)2001
4004 y(mark)o(er)g(on)h(the)f(map)h(the)g(name)f(of)g(the)h(e)n(v)o
(ent)2099 4104 y(is)h(sho)n(wn.)f(When)g(there)g(are)h(no)f(e)n(v)o
(ents)2036 4204 y(imported)f(a)i(message)f(stating)h(\224No)f(Ev)o
(ents)2308 4303 y(A)-6 b(v)n(ailable\224)28 b(is)h(displayed.)p
3469 4333 V 3686 2161 a(blah)p 4044 4333 V -147 4337
4195 4 v 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 11 12
TeXDict begin 11 11 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158
-481 a
SDict begin H.S end
 -158 -481 a -158 -481 a
SDict begin H.R end
 -158 -481 a -158 -481
a
SDict begin [/View [/XYZ H.V]/Dest (page.11) cvn /DEST pdfmark end
 -158 -481 a 0 TeXcolorgray 3992 -373 a Fd(11)p 0 TeXcolorgray
-147 -50 4195 4 v -147 3038 4 3089 v 3 1514 a Fb(9)p
192 3038 V 246 1414 a(Add)28 b(feature)g(to)g(generate)g(a)g(pro\002le)
g(for)g(community)246 1514 y(de)n(v)o(elopers)e(to)j(ha)n(v)o(e)f
(contacting)f(information)f(easily)954 1613 y(visable)p
1948 3038 V 2027 19 a(The)i(main)g(goal)g(of)g(the)h(tool)f(is)h(to)g
(promote)2086 119 y(community)e(de)n(v)o(elopment)e(in)k(the)f(open)
2004 219 y(source)g(scene.)g(What)h(this)g(feature)e(tackles)i(is)2041
318 y(a)g(w)o(ay)f(to)h(display)f(important)f(information)2057
418 y(about)h(people)f(that)i(are)f(already)g(in)m(v)n(olv)o(ed)2014
517 y(with)h(projects)f(to)h(those)f(who)g(w)o(ould)g(lik)o(e)g(to)2103
617 y(get)g(in)m(v)n(olv)o(ed.)f(This)h(feature)g(generates)2125
717 y(pro\002les)g(for)g(e)n(v)o(ent)f(hosts)i(along)f(with)2120
816 y(members)g(of)g(groups)f(that)h(ha)n(v)o(e)g(been)2094
916 y(imported)f(by)h(the)h(user)-5 b(.)28 b(These)h(pro\002les)2014
1016 y(consist)g(of)f(the)h(of)f(selected)g(person,)f(T)-7
b(witter)2014 1115 y(handle,)27 b(location,)g(link)h(to)h(Meetups)f
(pro\002le,)2025 1215 y(last)i(acti)n(vity)e(date,)g(group)e
(associated)j(with,)2004 1315 y(topics)f(the)o(y)g(are)h(interested)e
(in,)i(a)g(biography)-5 b(,)2032 1414 y(and)27 b(a)i(picture)f(of)g
(themselv)o(es.)g(In)g(order)f(to)2031 1514 y(gather)g(the)h
(information)e(for)i(these)h(we)g(had)2064 1613 y(to)g(mak)o(e)f
(another)f(API)i(call)g(to)f(Meetups.)2047 1713 y(First,)h(we)g(had)f
(to)g(adjust)h(the)f(current)g(API)2044 1813 y(call)h(for)f(importing)e
(e)n(v)o(ents)i(to)h(also)f(gather)2039 1912 y(the)g(ID)h(of)f(the)h(e)
n(v)o(ent)e(hosts.)i(Once)f(this)h(ID)2075 2012 y(w)o(as)h(obtained)d
(the)h(ne)o(xt)g(step)h(is)g(another)2041 2112 y(API)f(call)h
(gathering)d(information)h(on)h(each)2002 2211 y(e)n(v)o(ent)g(hosts)g
(while)h(searching)e(with)i(the)f(ID')-5 b(s)2091 2311
y(gathered.)26 b(Once)j(this)g(information)d(w)o(as)2023
2410 y(obtained)h(the)h(pro\002les)g(for)g(e)n(v)o(ent)g(hosts)h(and)
2122 2510 y(imported)e(group)f(members)i(could)f(be)2066
2610 y(displayed)g(in)i(their)f(o)n(wn)g(sections)h(of)f(the)2128
2709 y(application.)e(W)m(ith)j(users)g(ha)n(ving)e(the)2018
2809 y(options)h(to)g(see)h(group)e(members)h(and)g(e)n(v)o(ent)2066
2909 y(hosts)g(there)g(are)h(more)f(opportunities)e(for)2246
3008 y(these)j(users)f(to)h(get)f(in)m(v)n(olv)o(ed.)p
3469 3038 V 3686 1514 a(blah)p 4044 3038 V -147 3041
4195 4 v 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 12 13
TeXDict begin 12 12 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158
-481 a
SDict begin H.S end
 -158 -481 a -158 -481 a
SDict begin H.R end
 -158 -481 a -158 -481
a
SDict begin [/View [/XYZ H.V]/Dest (page.12) cvn /DEST pdfmark end
 -158 -481 a 0 TeXcolorgray 3992 -373 a Fd(12)p 0 TeXcolorgray
-147 -50 4195 4 v -147 4234 4 4284 v -18 2112 a Fb(10)p
192 4234 V 245 2062 a(Impro)o(v)o(e)25 b(the)j(visuals)g(of)g(the)g
(tool)f(and)h(ho)n(w)f(it)i(looks)878 2161 y(as)g(a)g(whole.)p
1948 4234 V 2050 19 a(The)f(application)f(itself)i(be)o(gan)e(as)i(a)g
(f)o(airly)2100 119 y(or)o(ganized)c(piece.)j(The)g(na)n(vigation)f
(bar)2089 219 y(implementation)g(really)h(helps)g(the)h(user)2001
318 y(k)o(eep)f(track)f(na)n(vigating)e(between)i(each)g(page.)2090
418 y(When)h(vie)n(wing)f(the)i(list)g(of)g(e)n(v)o(ents,)e(the)2044
517 y(e)n(v)o(ents)h(are)h(listed)g(in)f(chronological)e(order)2024
617 y(starting)i(with)h(the)f(most)h(recent.)e(There)h(is)h(a)2029
717 y(search)f(bar)h(a)n(v)n(ailable)f(for)f(the)i(user)f(to)h(type)
2050 816 y(in)f(for)g(a)h(certain)f(e)n(v)o(ent)g(that)g(the)o(y)g
(wish)h(to)2217 916 y(vie)n(w)-5 b(.)27 b(There)h(are)g(other)g
(sorting)2096 1016 y(mechanisms)f(to)i(vie)n(w)g(those)f(e)n(v)o(ents)g
(in)2041 1115 y(another)f(sorting)g(order)-5 b(.)28 b(Our)g(focus)g(in)
h(this)2039 1215 y(requirement)d(were)j(to)f(mainly)g(to)h(impro)o(v)o
(e)2038 1315 y(ho)n(w)f(data)g(is)i(displayed.)d(This)h(speci\002cally)
2038 1414 y(applies)h(to)f(to)h(the)f(e)n(v)o(ent)g(page)g(and)g
(people)2038 1514 y(pro\002les.)g(Along)g(with)h(the)f(addition)f(of)h
(the)2025 1613 y(Host)h(objects,)f(the)h(generated)d(host)j(pro\002les)
2037 1713 y(w)o(ould)f(ha)n(v)o(e)g(a)h(visual)f(update)g(as)h(well.)g
(As)2036 1813 y(displayed)e(in)i(Figure)e(9,)i(the)f(impro)o(v)o(ement)
2142 1912 y(of)g(the)h(pro\002le)f(page)f(is)j(sho)n(wn)e(with)2118
2012 y(cate)o(gories)g(speci\002cally)g(labelled)g(and)2032
2112 y(displayed)f(in)i(concrete)e(areas)h(of)h(the)f(page.)2001
2211 y(If)f(the)g(certain)f(v)n(ariable)g(does)h(not)f(e)o(xist,)h
(then)2009 2311 y(the)i(user)f(can)g(clearly)g(see)h(where)f(that)h
(detail)2037 2410 y(w)o(ould)f(go)g(on)g(the)g(page.)g(T)-7
b(opics)28 b(are)h(more)2071 2510 y(clearly)f(or)o(ganized)e(ha)n(v)o
(e)i(are)g(con\002gured)2017 2610 y(under)f(a)i(scrollable)f(table)h
(as)g(well.)g(Ov)o(erall,)2066 2709 y(this)g(addition)e(mak)o(es)i(the)
f(people)f(pro\002le)2036 2809 y(page)h(much)g(more)f(or)o(ganized)f
(and)i(le)o(gible.)2019 2909 y(In)g(addition)f(to)i(the)f(updated)f
(people)h(pro\002le)2021 3008 y(page,)g(the)g(e)n(v)o(ent)g(page)f(is)j
(also)f(upgraded)d(in)2005 3108 y(Figure)i(10.)g(Similar)g(to)h(the)f
(pro\002le)g(upgrade,)2050 3207 y(the)g(e)n(v)o(ent)g(page)g(no)n(w)g
(has)g(cate)o(gories)g(that)2028 3307 y(speci\002cally)h(detail)f
(where)g(objects)g(belong.)2006 3407 y(This)g(is)i(much)d(more)h
(particularly)f(important)2001 3506 y(where)h(the)g(description)f(is)i
(displayed)e(for)g(the)2090 3606 y(e)n(v)o(ent.)g(Pre)n(viously)-5
b(,)27 b(it)i(w)o(as)g(much)f(more)2012 3706 y(dif)n(\002cult)g(for)f
(the)i(user')-5 b(s)29 b(e)o(ye)f(to)g(vie)n(w)h(where)2001
3805 y(the)f(v)o(enue)e(of)h(e)n(v)o(ent)f(w)o(ould)h(be.)g(No)n(w)g
(in)h(this)2062 3905 y(update,)f(that)i(portion)e(is)i(clearly)f
(labelled)2015 4004 y(which)g(allo)n(ws)g(the)h(user)f(to)h(spend)f
(less)h(time)2192 4104 y(reading)f(and)f(to)i(quickly)e(see)i(the)2200
4204 y(information)d(that)j(the)o(y)e(w)o(ant)i(to.)p
3469 4234 V 3686 2111 a(blah)p 4044 4234 V -147 4237
4195 4 v -147 4237 V 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray eop end
%%Page: 13 14
TeXDict begin 13 13 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158
-481 a
SDict begin H.S end
 -158 -481 a -158 -481 a
SDict begin H.R end
 -158 -481 a -158 -481
a
SDict begin [/View [/XYZ H.V]/Dest (page.13) cvn /DEST pdfmark end
 -158 -481 a 0 TeXcolorgray 3992 -373 a Fd(13)p 0 TeXcolorgray
-150 -150 a
SDict begin H.S end
 -150 -150 a -150 -150 a
SDict begin 12 H.A end
 -150 -150 a -150
-150 a
SDict begin [/View [/XYZ H.V]/Dest (section.3) cvn /DEST pdfmark end
 -150 -150 a 1444 -50 a Fb(I)t(I)t(I)t(.)45 b(D)t(E)t(S)t(I)t(G)t
(N)25 b(D)t(O)t(C)t(U)t(M)t(E)t(N)t(T)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 14 15
TeXDict begin 14 14 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158
-481 a
SDict begin H.S end
 -158 -481 a -158 -481 a
SDict begin H.R end
 -158 -481 a -158 -481
a
SDict begin [/View [/XYZ H.V]/Dest (page.14) cvn /DEST pdfmark end
 -158 -481 a 0 TeXcolorgray 3992 -373 a Fd(14)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 15 16
TeXDict begin 15 15 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158
-481 a
SDict begin H.S end
 -158 -481 a -158 -481 a
SDict begin H.R end
 -158 -481 a -158 -481
a
SDict begin [/View [/XYZ H.V]/Dest (page.15) cvn /DEST pdfmark end
 -158 -481 a 0 TeXcolorgray 3992 -373 a Fd(15)p 0 TeXcolorgray
-150 -150 a
SDict begin H.S end
 -150 -150 a -150 -150 a
SDict begin 12 H.A end
 -150 -150 a -150
-150 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.3.1) cvn /DEST pdfmark
end
 -150 -150 a 100 x Fa(A.)41 b(Discussion)28 b(on)h(Design)f
(Document)-67 75 y Fb(Blah)h(blah)f(blah)g(discussion)g(will)h(go)f
(here.)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 16 17
TeXDict begin 16 16 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158
-481 a
SDict begin H.S end
 -158 -481 a -158 -481 a
SDict begin H.R end
 -158 -481 a -158 -481
a
SDict begin [/View [/XYZ H.V]/Dest (page.16) cvn /DEST pdfmark end
 -158 -481 a 0 TeXcolorgray 3992 -373 a Fd(16)p 0 TeXcolorgray
-150 -150 a
SDict begin H.S end
 -150 -150 a -150 -150 a
SDict begin 12 H.A end
 -150 -150 a -150
-150 a
SDict begin [/View [/XYZ H.V]/Dest (section.4) cvn /DEST pdfmark end
 -150 -150 a 1388 -50 a Fb(I)t(V)-7 b(.)45 b(T)t(E)t(C)t(H)t(N)t
(O)t(L)t(O)t(G)t(Y)26 b(R)t(E)t(V)t(I)t(E)t(W)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 17 18
TeXDict begin 17 17 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158
-481 a
SDict begin H.S end
 -158 -481 a -158 -481 a
SDict begin H.R end
 -158 -481 a -158 -481
a
SDict begin [/View [/XYZ H.V]/Dest (page.17) cvn /DEST pdfmark end
 -158 -481 a 0 TeXcolorgray 3992 -373 a Fd(17)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 18 19
TeXDict begin 18 18 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158
-481 a
SDict begin H.S end
 -158 -481 a -158 -481 a
SDict begin H.R end
 -158 -481 a -158 -481
a
SDict begin [/View [/XYZ H.V]/Dest (page.18) cvn /DEST pdfmark end
 -158 -481 a 0 TeXcolorgray 3992 -373 a Fd(18)p 0 TeXcolorgray
-150 -150 a
SDict begin H.S end
 -150 -150 a -150 -150 a
SDict begin 12 H.A end
 -150 -150 a -150
-150 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.4.1) cvn /DEST pdfmark
end
 -150 -150 a 100 x Fa(A.)41 b(Discussion)28 b(on)h(T)-8
b(ec)o(h)28 b(Re)o(vie)o(w)-67 75 y Fb(Blah)h(blah)f(blah)g(discussion)
g(will)h(go)f(here.)p 0 TeXcolorgray 0 TeXcolorgray eop
end
%%Page: 19 20
TeXDict begin 19 19 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158
-481 a
SDict begin H.S end
 -158 -481 a -158 -481 a
SDict begin H.R end
 -158 -481 a -158 -481
a
SDict begin [/View [/XYZ H.V]/Dest (page.19) cvn /DEST pdfmark end
 -158 -481 a 0 TeXcolorgray 3992 -373 a Fd(19)p 0 TeXcolorgray
-150 -150 a
SDict begin H.S end
 -150 -150 a -150 -150 a
SDict begin 12 H.A end
 -150 -150 a -150
-150 a
SDict begin [/View [/XYZ H.V]/Dest (section.5) cvn /DEST pdfmark end
 -150 -150 a 1625 -50 a Fb(V)-7 b(.)46 b(B)t(L)t(O)t(G)26
b(P)t(O)t(S)t(T)t(S)p 0 TeXcolorgray 0 TeXcolorgray eop
end
%%Page: 20 21
TeXDict begin 20 20 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158
-481 a
SDict begin H.S end
 -158 -481 a -158 -481 a
SDict begin H.R end
 -158 -481 a -158 -481
a
SDict begin [/View [/XYZ H.V]/Dest (page.20) cvn /DEST pdfmark end
 -158 -481 a 0 TeXcolorgray 3992 -373 a Fd(20)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 21 22
TeXDict begin 21 21 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158
-481 a
SDict begin H.S end
 -158 -481 a -158 -481 a
SDict begin H.R end
 -158 -481 a -158 -481
a
SDict begin [/View [/XYZ H.V]/Dest (page.21) cvn /DEST pdfmark end
 -158 -481 a 0 TeXcolorgray 3992 -373 a Fd(21)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 22 23
TeXDict begin 22 22 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158
-481 a
SDict begin H.S end
 -158 -481 a -158 -481 a
SDict begin H.R end
 -158 -481 a -158 -481
a
SDict begin [/View [/XYZ H.V]/Dest (page.22) cvn /DEST pdfmark end
 -158 -481 a 0 TeXcolorgray 3992 -373 a Fd(22)p 0 TeXcolorgray
-150 -150 a
SDict begin H.S end
 -150 -150 a -150 -150 a
SDict begin 12 H.A end
 -150 -150 a -150
-150 a
SDict begin [/View [/XYZ H.V]/Dest (section.6) cvn /DEST pdfmark end
 -150 -150 a 1289 -50 a Fb(V)t(I)t(.)46 b(P)t(R)q(O)t(J)t(E)t(C)t
(T)26 b(D)t(O)t(C)t(U)t(M)t(E)t(N)t(T)l(A)-5 b(T)t(I)t(O)t(N)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 23 24
TeXDict begin 23 23 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158
-481 a
SDict begin H.S end
 -158 -481 a -158 -481 a
SDict begin H.R end
 -158 -481 a -158 -481
a
SDict begin [/View [/XYZ H.V]/Dest (page.23) cvn /DEST pdfmark end
 -158 -481 a 0 TeXcolorgray 3992 -373 a Fd(23)p 0 TeXcolorgray
-150 -150 a
SDict begin H.S end
 -150 -150 a -150 -150 a
SDict begin 12 H.A end
 -150 -150 a -150
-150 a
SDict begin [/View [/XYZ H.V]/Dest (section.7) cvn /DEST pdfmark end
 -150 -150 a 1019 -50 a Fb(V)t(I)t(I)t(.)45 b(H)t
Fc(O)r(W)24 b(D)t(I)t(D)h(Y)r(O)t(U)g(L)t(E)t(A)t(R)t(N)g(T)t(H)t(E)f
(N)t(E)t(W)g(T)t(E)t(C)t(H)t(N)t(O)t(L)t(O)t(G)t(Y)t
Fb(?)-67 75 y(Throughout)30 b(the)j(presentation)f(of)h(our)f(tools)h
(to)h(our)e(client)h(Ross)h(Gardler)f(we)g(were)g(happ)o(y)f(to)i(hear)
e(that)i(he)f(w)o(as)h(really)e(e)o(xcited)-150 175 y(about)23
b(the)i(progress)e(we)i(ha)n(v)o(e)f(made)g(thus)g(f)o(ar)-5
b(.)25 b(In)f(his)h(e)o(xcitement)e(in)h(seeing)g(ho)n(w)g(f)o(ar)g(we)
h(ha)n(v)o(e)f(come)g(with)g(the)h(tools)f(and)g(the)h(progress)-150
275 y(he)i(has)g(seen)g(Ross)h(be)o(gan)e(asking)g(for)g(feature)g
(requests)h(to)g(be)g(added)f(to)h(the)g(tools)g(we)h(ha)n(v)o(e)e(de)n
(v)o(eloped)f(thus)i(f)o(ar)-5 b(.)27 b(W)-7 b(e)28 b(decided)e(to)h
(add)-150 374 y(this)32 b(section)e(to)i(our)e(report)g(so)h(that)g(we)
h(could)e(reference)f(Ross')-5 b(s)33 b(con\002dence)c(in)i(our)f(team)
h(to)h(mak)o(e)e(these)h(requests)g(possible)g(if)g(we)-150
474 y(ha)n(v)o(e)d(time.)h(These)g(requests)g(are)g(for)f(future)g
(ideas)h(for)f(the)h(tools)g(as)h(our)e(client)h(also)g(w)o(ould)f(lik)
o(e)i(us)f(to)g(submit)g(patches)f(for)h(the)g(tools)-150
574 y(that)k(we)g(ha)n(v)o(e)g(made)f(thus)h(f)o(ar)g(as)h(he)e(appro)o
(v)o(es)f(of)i(the)g(w)o(ork)f(we)h(ha)n(v)o(e)g(done.)e(W)-7
b(e)35 b(will)e(be)g(completing)e(these)i(patches)g(and)f(getting)-150
673 y(them)c(to)h(Ross.)g(The)f(requirements)f(that)h(ha)n(v)o(e)g(had)
g(feature)g(requests)g(proposed)e(are)j(sho)n(wn)e(belo)n(w)-5
b(.)-150 803 y
SDict begin H.S end
 -150 803 a -150 803 a
SDict begin 12 H.A end
 -150 803 a -150
803 a
SDict begin [/View [/XYZ H.V]/Dest (section.8) cvn /DEST pdfmark end
 -150 803 a 661 885 a Fb(V)t(I)t(I)t(I)t(.)45 b(W)t
Fc(H)t(A)m(T)24 b(D)t(I)t(D)h(Y)r(O)t(U)g(L)t(E)t(A)t(R)t(N)g(F)t(R)q
(O)t(M)h(A)t(L)t(L)e(O)t(F)g(T)t(H)t(I)t(S)t Fb(?)h(\()t(J)t
Fc(U)t(S)t(T)t(I)t(N)g Fb(B)t Fc(R)q(U)t(N)t(T)t(M)t(Y)t(E)t(R)t
Fb(\))-150 926 y
SDict begin H.S end
 -150 926 a -150 926 a
SDict begin 12 H.A end
 -150 926 a -150
926 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.8.1) cvn /DEST pdfmark
end
 -150 926 a 85 x Fa(A.)41 b(What)28 b(T)-8 b(ec)o(hnical)28
b(Information)f(Did)h(I)h(Learn)-150 1054 y
SDict begin H.S end
 -150 1054
a -150 1054 a
SDict begin 12 H.A end
 -150 1054 a -150 1054 a
SDict begin [/View [/XYZ H.V]/Dest (section.9) cvn /DEST pdfmark end
 -150 1054 a 716
1136 a Fb(I)t(X)t(.)46 b(W)t Fc(H)t(A)m(T)24 b(D)t(I)t(D)i(Y)r(O)t(U)e
(L)t(E)t(A)t(R)t(N)h(F)t(R)q(O)t(M)h(A)t(L)t(L)e(O)t(F)h(T)t(H)t(I)t(S)
t Fb(?)f(\()t(M)t Fc(E)t(G)t(A)t(N)h Fb(G)t Fc(O)t(O)t(S)t(S)t(E)t(N)t
(S)t Fb(\))-67 1262 y(I)39 b(learned)f(quite)h(a)g(bit)g(from)f(this)h
(project.)f(On)h(the)g(technical)f(side,)h(I)h(learned)d(a)j(lot)f
(about)f(interf)o(acing)f(with)i(APIs,)h(and)e(ho)n(w)-150
1362 y(documentation)31 b(can)i(either)g(mak)o(e)h(them)f(easy)h(to)g
(use,)f(or)h(an)f(absolute)g(pain)g(to)h(use.)g(On)g(the)f
(non-technical)e(side,)j(I)g(learned)f(about)-150 1461
y(writing)g(e)n(v)o(en)f(better)h(reports,)f(as)i(well)f(as)h(ho)n(w)f
(to)g(e)o(xplain)f(our)h(project)f(in)h(w)o(ays)h(that)f(mak)o(e)g(it)h
(easy)f(for)g(people)f(outside)g(the)i(open)-150 1561
y(source)27 b(community)e(to)j(understand.)d(In)i(project)g(management)
e(I)j(learned)f(things)g(lik)o(e)h(ho)n(w)f(frustrating)f(it)i(can)f
(be)h(when)f(your)f(client)i(is)-150 1661 y(hard)h(to)i(contact.)e(If)h
(I)g(had)g(to)g(do)g(it)h(all)g(o)o(v)o(er)d(again,)h(I)i(w)o(ould)e(w)
o(ork)h(harder)f(to)h(understand)e(e)o(xactly)h(what)h(this)h(project)e
(is)i(about.)e(W)-7 b(e)-150 1760 y(spent)32 b(a)g(lot)g(of)f(time)h
(trying)f(to)h(understand)e(what)h(our)g(client)h(w)o(anted)f(from)g
(each)h(requirement,)d(time)j(that)g(w)o(ould)f(ha)n(v)o(e)g(been)g
(better)-150 1860 y(spent)d(ful\002lling)g(them.)-150
1990 y
SDict begin H.S end
 -150 1990 a -150 1990 a
SDict begin 12 H.A end
 -150 1990 a -150 1990
a
SDict begin [/View [/XYZ H.V]/Dest (section.10) cvn /DEST pdfmark end
 -150 1990 a 836 2072 a Fb(X)t(.)46 b(W)t Fc(H)t(A)m(T)24
b(D)t(I)t(D)h(Y)r(O)t(U)g(L)t(E)t(A)t(R)t(N)g(F)t(R)q(O)t(M)h(A)t(L)t
(L)e(O)t(F)h(T)t(H)t(I)t(S)t Fb(?)f(\()t(H)t Fc(A)t(I)h
Fb(N)t Fc(G)t(U)t(Y)t(E)t(N)t Fb(\))-150 2113 y
SDict begin H.S end
 -150
2113 a -150 2113 a
SDict begin 12 H.A end
 -150 2113 a -150 2113 a
SDict begin [/View [/XYZ H.V]/Dest (section.11) cvn /DEST pdfmark end
 -150 2113
a 1297 2197 a Fb(X)t(I)t(.)45 b(P)t(R)q(O)t(B)t(L)t(E)t(M)t(S)26
b(E)t(N)t(C)t(O)t(U)t(N)t(T)t(E)t(R)t(E)t(D)-67 2323
y(Throughout)g(this)k(term)f(we)h(ha)n(v)o(e)f(encountered)d(man)o(y)j
(problems)f(that)h(ha)n(v)o(e)g(impeded)f(our)g(progress)h(for)f(this)i
(project.)f(This)g(w)o(as)h(to)-150 2423 y(be)d(e)o(xpected)f(as)i
(with)f(all)h(projects.)f(Ev)o(ents)f(occur)h(that)g(can)g(halt)g
(progress)g(and)f(bring)g(forth)h(challenges)f(that,)h(as)h(a)g(group,)
d(we)j(needed)-150 2522 y(to)c(o)o(v)o(ercome.)e(The)h(problems)g(that)
h(we)h(ha)n(v)o(e)f(f)o(aced)f(are)h(listed)h(belo)n(w)e(along)h(with)g
(the)g(methods)f(we)i(used)f(to)g(get)g(through)e(the)i(situation.)-150
2622 y(W)-7 b(e)30 b(also)f(ran)g(into)f(the)h(occasioin)f(coding)f
(block)h(where)g(we)i(w)o(ould)e(ha)n(v)o(e)g(days)h(where)f(not)g
(much)g(progress)g(w)o(as)i(obtained.)d(Ho)n(we)n(v)o(er)m(,)-150
2722 y(we)i(feel)f(this)h(did)g(not)f(impeded)f(our)g(progress)h(as)h
(it)g(is)h(just)f(part)f(of)g(being)g(a)g(computer)f(scientist.)-150
2870 y
SDict begin H.S end
 -150 2870 a -150 2870 a
SDict begin 12 H.A end
 -150 2870 a -150 2870
a
SDict begin [/View [/XYZ H.V]/Dest (subsection.11.1) cvn /DEST pdfmark
end
 -150 2870 a 82 x Fa(A.)41 b(Pr)l(oblem)28 b(1)-67 3078
y Fb(Deciding)34 b(which)h(platform)f(we)i(were)f(going)f(to)i(be)f(de)
n(v)o(eloping)e(on)i(using)g(Dock)o(er)-5 b(.)35 b(This)g(w)o(as)i(a)e
(major)g(issue)h(as)g(we)g(originally)-150 3178 y(planed)27
b(to)g(w)o(ork)g(with)h(the)g(W)m(indo)n(ws)f(operating)f(system)i(ho)n
(we)n(v)o(er)d(we)j(could)f(not)g(get)h(the)g(application)e(to)i(run)f
(locally)g(on)g(a)h(W)m(indo)n(ws)-150 3277 y(platform.)f(W)-7
b(e)29 b(continually)e(ran)h(into)g(errors)f(with)i(creating)e(a)i
(local)f(database)g(along)g(with)g(ha)n(ving)f(the)i(right)f(Dock)o(er)
f(tools)h(to)h(support)-150 3377 y(the)d(application.)f(W)-7
b(e)27 b(had)f(a)n(v)n(ailable)g(resources)f(such)h(as)h(a)g(README)f
(\002le)h(that)f(ga)n(v)o(e)g(insight)f(on)h(the)h(problem)d(b)n(ut)i
(whate)n(v)o(er)f(we)i(tried)-150 3476 y(did)34 b(not)g(seem)g(to)h(w)o
(ork.)e(W)-7 b(e)35 b(e)n(v)o(entually)e(shifted)g(gears)h(and)g
(decided)f(to)h(try)g(Dock)o(er)g(and)f(the)h(application)f(on)h
(Linux,)f(speci\002cally)-150 3576 y(Ub)n(untu)25 b(14.04.)e(Thanks)i
(to)h(the)f(Linux)g(kno)n(wledge)e(of)j(Me)o(gan)e(Goossens)h(and)g
(plenty)g(of)g(online)g(documentation)e(we)j(were)f(able)h(to)g(get)
-150 3676 y(Dock)o(er)31 b(installed)i(successfully)e(along)h(with)g
(running)e(the)j(application)e(on)g(a)i(local)g(host.)f(From)f(this)i
(point)f(we)h(decided)e(to)h(continue)-150 3775 y(de)n(v)o(eloping)26
b(in)i(the)h(Linux)e(en)m(vironment.)-150 3924 y
SDict begin H.S end
 -150
3924 a -150 3924 a
SDict begin 12 H.A end
 -150 3924 a -150 3924 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.11.2) cvn /DEST pdfmark
end
 -150 3924
a 82 x Fa(B.)41 b(Pr)l(oblem)28 b(2)-67 4131 y Fb(At)42
b(the)f(end)f(of)h(the)g(F)o(all)h(2015)e(term)g(we)i(set)g(up)e(a)i
(weekly)e(meeting)h(with)g(our)f(client)h(throughout)d(W)m(inter)j
(2016)f(to)h(discuss)-150 4231 y(implementation)35 b(details)j(for)e
(the)i(week)f(and)f(planned)g(to)i(utilize)f(this)h(time)f(to)h(mak)o
(e)f(sure)g(e)n(v)o(eryone)d(is)39 b(on)e(the)g(same)g(page.)g(Due)-150
4331 y(to)27 b(some)f(miss-communication)e(we)j(were)g(unable)f(to)g
(meet)h(with)g(our)f(client)h(for)f(the)h(\002rst)g(tw)o(o)g(weeks.)g
(This)g(halted)f(our)g(progress)f(with)-150 4430 y(because)30
b(we)i(had)f(a)g(lot)h(of)e(issues)i(with)g(getting)e(Dock)o(er)g(to)i
(w)o(ork)e(with)i(W)m(indo)n(ws)e(and)h(we)g(were)g(counting)e(on)i(a)h
(meeting)e(with)h(our)-150 4530 y(client)g(to)g(resolv)o(es)g(those)f
(issues)i(as)g(soon)f(as)g(possible.)g(W)-7 b(e)32 b(e)n(v)o(entually)d
(got)i(in)g(contact)f(with)i(our)e(client)h(and)f(\002gured)g(out)h
(what)g(w)o(as)-150 4630 y(happening)22 b(as)j(the)f(\002rst)h(week)f
(our)g(client)g(w)o(as)h(on)f(an)g(une)o(xpected)e(trip)i(to)g(the)h
(UK)f(and)g(in)g(the)h(second)e(week)h(our)g(client)g(did)g(not)g
(realize)-150 4729 y(that)j(these)h(meetings)f(occurred)e(e)n(v)o(ery)h
(week)h(throughout)d(the)k(term.)e(These)i(things)e(happen)g(and)h
(once)g(we)g(all)h(had)f(a)h(chance)e(to)i(get)f(on)-150
4829 y(the)f(same)h(page)e(e)n(v)o(ery)g(weekly)g(meeting)g(is)j(going)
c(smoothly)-5 b(.)25 b(This)h(problem)e(also)j(happened)d(at)i(the)h
(be)o(ginning)c(of)j(the)g(spring)f(term.)h(A)-150 4928
y(ne)n(w)g(weekly)f(meeting)g(time)h(w)o(as)h(set)g(up)e(with)h(our)f
(client)h(ho)n(we)n(v)o(er)e(our)i(client)g(belie)n(v)o(ed)e(that)i
(our)f(\002rst)i(meeting)e(w)o(as)i(in)f(the)g(middle)f(of)-150
5028 y(June.)k(This)h(w)o(as)h(a)f(problem)e(as)j(we)f(tried)g(to)g
(set)g(up)g(a)g(ne)n(w)g(meeting)e(time)i(b)n(ut)g(our)f(client)h(w)o
(as)h(v)o(ery)d(b)n(usy)i(with)g(tra)n(v)o(el)g(and)f(v)n(acation)-150
5128 y(that)g(we)f(were)h(not)f(able)g(to)h(meet)f(with)h(him)f(three)g
(weeks)h(prior)e(to)i(e)o(xpo.)e(Email)h(communication)e(w)o(as)j(v)o
(ery)f(dif)n(\002cult)g(as)h(well.)p 0 TeXcolorgray 0
TeXcolorgray eop end
%%Page: 24 25
TeXDict begin 24 24 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158
-481 a
SDict begin H.S end
 -158 -481 a -158 -481 a
SDict begin H.R end
 -158 -481 a -158 -481
a
SDict begin [/View [/XYZ H.V]/Dest (page.24) cvn /DEST pdfmark end
 -158 -481 a 0 TeXcolorgray 3992 -373 a Fd(24)p 0 TeXcolorgray
-150 -150 a
SDict begin H.S end
 -150 -150 a -150 -150 a
SDict begin 12 H.A end
 -150 -150 a -150
-150 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.11.3) cvn /DEST pdfmark
end
 -150 -150 a 100 x Fa(C.)42 b(Pr)l(oblem)28 b(3)-67
75 y Fb(During)i(week)i(three)f(of)g(W)m(inter)g(2016)f(we)i(ran)f
(into)h(the)f(issue)h(of)g(meetings)f(being)f(cancelled)h(due)g(to)g
(illness)i(and)e(injury)-5 b(.)29 b(One)j(of)-150 175
y(our)c(team)i(members)e(e)o(xperience)f(an)i(injury)f(that)i(caused)e
(a)i(full)f(group)f(meeting)g(with)h(a)h(T)-8 b(A)30
b(to)f(occur)f(which)h(halted)g(our)f(progress)g(in)-150
275 y(ha)n(ving)k(to)h(get)f(e)n(v)o(eryone)e(caught)i(up)g(on)h(the)f
(same)h(page.)f(This)h(same)g(week)f(another)g(group)f(member)g(became)
h(sick)h(and)f(could)g(not)-150 374 y(mak)o(e)c(it)i(to)f(tw)o(o)g
(meetings)f(for)g(the)g(week)h(which)f(meant)g(that)h(tw)o(o)g(people)f
(could)f(not)i(mak)o(e)f(it)h(so)h(tw)o(o)e(meetings)h(were)f
(cancelled)g(out)-150 474 y(of)j(the)f(weekly)h(three)f(meetings)g(we)h
(ha)n(v)o(e)f(as)i(a)f(group.)e(Ho)n(we)n(v)o(er)m(,)g(we)i(were)g
(able)f(to)h(w)o(ork)f(indi)n(vidually)f(at)i(home)f(b)n(ut)h(it)h(w)o
(as)f(still)h(a)-150 574 y(noticeable)27 b(disruption)g(from)g(the)h
(normal)g(w)o(ork)f(we)i(produce)d(in)j(a)g(week.)f(It)g(did)g(not)g
(seem)h(lik)o(e)f(it)i(w)o(as)f(going)e(to)h(ef)n(fect)g(the)g(group)f
(at)-150 673 y(\002rst)i(ho)n(we)n(v)o(er)c(when)j(we)g(be)o(gan)e(to)i
(get)g(back)f(on)g(track)g(it)i(took)e(some)h(adjustments)f(to)h(mak)o
(es)f(sure)h(e)n(v)o(eryone)d(w)o(as)k(on)e(the)h(same)g(page)-150
773 y(and)g(try)g(to)h(mak)o(e)f(up)g(for)g(the)g(week)h(we)f(missed.)
-150 922 y
SDict begin H.S end
 -150 922 a -150 922 a
SDict begin 12 H.A end
 -150 922 a -150 922
a
SDict begin [/View [/XYZ H.V]/Dest (subsection.11.4) cvn /DEST pdfmark
end
 -150 922 a 81 x Fa(D.)41 b(Pr)l(oblem)28 b(4)-67 1129
y Fb(During)34 b(the)h(\002rst)i(week)e(of)g(the)g(term)g(we)h(be)o
(gan)d(de)n(v)o(eloping)g(based)i(on)g(the)g(requirements)e(we)j(had)f
(listed)h(in)f(our)g(requirements)-150 1229 y(document.)29
b(The)i(problem)e(we)i(ran)g(into)g(here)g(w)o(as)h(that)f(we)g(had)g
(issues)h(understanding)c(what)j(are)g(requirements)e(were)i(trying)f
(to)h(say)-150 1328 y(thus)21 b(we)h(went)f(through)f(the)h(document)e
(and)i(changed)f(the)h(language)f(used)h(for)f(the)i(requirements.)d
(This)i(did)g(not)g(change)f(the)i(requirement)-150 1428
y(b)n(ut)h(it)h(made)e(it)i(easier)g(to)f(understand)e(if)i(someone)f
(is)i(reading)e(through)f(it.)i(This)h(took)e(a)h(days)g(w)o(orth)g(of)
g(progress)f(which)g(w)o(as)i(frustrating)-150 1527 y(due)g(to)g(the)g
(f)o(act)g(that)h(we)f(belie)n(v)o(ed)f(to)h(ha)n(v)o(e)g(this)g(done)f
(last)i(term.)f(W)-7 b(e)25 b(currently)e(are)h(happ)o(y)e(with)j(the)f
(updated)e(requirements)h(document)-150 1627 y(as)36
b(it)g(has)f(been)f(appro)o(v)o(ed)e(by)j(our)f(client,)h(professor)m
(,)e(and)i(T)-8 b(A.)35 b(This)g(halted)g(our)f(progress)g(by)h(being)f
(an)h(unnecessary)e(step)i(in)h(the)-150 1727 y(implementation)26
b(process)i(as)i(it)f(should)e(ha)n(v)o(e)h(been)g(completed)f(last)i
(term.)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
